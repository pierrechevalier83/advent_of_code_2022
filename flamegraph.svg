<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="997.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="75"><g><title>[ld-linux-x86-64.so.2] (2 samples, 2.67%)</title><rect x="2.6667%" y="901" width="2.6667%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="2"/><text x="2.9167%" y="911.50">[l..</text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 2.67%)</title><rect x="2.6667%" y="885" width="2.6667%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="2"/><text x="2.9167%" y="895.50">[l..</text></g><g><title>__libc_early_init (1 samples, 1.33%)</title><rect x="4.0000%" y="869" width="1.3333%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="4.2500%" y="879.50"></text></g><g><title>__getrlimit (1 samples, 1.33%)</title><rect x="4.0000%" y="853" width="1.3333%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="4.2500%" y="863.50"></text></g><g><title>[unknown] (1 samples, 1.33%)</title><rect x="4.0000%" y="837" width="1.3333%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="4.2500%" y="847.50"></text></g><g><title>[unknown] (1 samples, 1.33%)</title><rect x="4.0000%" y="821" width="1.3333%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1"/><text x="4.2500%" y="831.50"></text></g><g><title>[unknown] (1 samples, 1.33%)</title><rect x="4.0000%" y="805" width="1.3333%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="4.2500%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 9.33%)</title><rect x="0.0000%" y="917" width="9.3333%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="7"/><text x="0.2500%" y="927.50">[ld-linux-x86..</text></g><g><title>[unknown] (3 samples, 4.00%)</title><rect x="5.3333%" y="901" width="4.0000%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="3"/><text x="5.5833%" y="911.50">[unk..</text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 10.67%)</title><rect x="0.0000%" y="933" width="10.6667%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="8"/><text x="0.2500%" y="943.50">[ld-linux-x86-64..</text></g><g><title>[unknown] (1 samples, 1.33%)</title><rect x="9.3333%" y="917" width="1.3333%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="9.5833%" y="927.50"></text></g><g><title>advent_of_code_2022::day_02::day2_part1::&lt;impl advent_of_code_2022::aoc_factory::Day2Part1 for advent_of_code_2022::aoc_factory::Factory&gt;::day2_part1 (1 samples, 1.33%)</title><rect x="10.6667%" y="661" width="1.3333%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="1"/><text x="10.9167%" y="671.50"></text></g><g><title>aoc_runner::Runner::try_gen (1 samples, 1.33%)</title><rect x="10.6667%" y="645" width="1.3333%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="1"/><text x="10.9167%" y="655.50"></text></g><g><title>&lt;advent_of_code_2022::day_02::day2_part2::RunnerStruct as aoc_runner::Runner&gt;::gen (1 samples, 1.33%)</title><rect x="10.6667%" y="629" width="1.3333%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="1"/><text x="10.9167%" y="639.50"></text></g><g><title>advent_of_code_2022::day_02::parse_input (1 samples, 1.33%)</title><rect x="10.6667%" y="613" width="1.3333%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="1"/><text x="10.9167%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.33%)</title><rect x="10.6667%" y="597" width="1.3333%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="1"/><text x="10.9167%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="10.6667%" y="581" width="1.3333%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="1"/><text x="10.9167%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="10.6667%" y="565" width="1.3333%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="1"/><text x="10.9167%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="10.6667%" y="549" width="1.3333%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="10.9167%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 1.33%)</title><rect x="10.6667%" y="533" width="1.3333%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="1"/><text x="10.9167%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 1.33%)</title><rect x="10.6667%" y="517" width="1.3333%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="1"/><text x="10.9167%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 1.33%)</title><rect x="10.6667%" y="501" width="1.3333%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="1"/><text x="10.9167%" y="511.50"></text></g><g><title>advent_of_code_2022::day_04::day4_part2::&lt;impl advent_of_code_2022::aoc_factory::Day4Part2 for advent_of_code_2022::aoc_factory::Factory&gt;::day4_part2 (1 samples, 1.33%)</title><rect x="12.0000%" y="661" width="1.3333%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="1"/><text x="12.2500%" y="671.50"></text></g><g><title>aoc_runner::Runner::try_gen (1 samples, 1.33%)</title><rect x="12.0000%" y="645" width="1.3333%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="1"/><text x="12.2500%" y="655.50"></text></g><g><title>&lt;advent_of_code_2022::day_04::day4_part1::RunnerStruct as aoc_runner::Runner&gt;::gen (1 samples, 1.33%)</title><rect x="12.0000%" y="629" width="1.3333%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="1"/><text x="12.2500%" y="639.50"></text></g><g><title>advent_of_code_2022::day_04::parse_input (1 samples, 1.33%)</title><rect x="12.0000%" y="613" width="1.3333%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="1"/><text x="12.2500%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.33%)</title><rect x="12.0000%" y="597" width="1.3333%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="1"/><text x="12.2500%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="12.0000%" y="581" width="1.3333%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="1"/><text x="12.2500%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="12.0000%" y="565" width="1.3333%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="12.2500%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="12.0000%" y="549" width="1.3333%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="12.2500%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 1.33%)</title><rect x="12.0000%" y="533" width="1.3333%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="12.2500%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 1.33%)</title><rect x="12.0000%" y="517" width="1.3333%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="1"/><text x="12.2500%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="12.0000%" y="501" width="1.3333%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="12.2500%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.33%)</title><rect x="12.0000%" y="485" width="1.3333%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="1"/><text x="12.2500%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 1.33%)</title><rect x="12.0000%" y="469" width="1.3333%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="1"/><text x="12.2500%" y="479.50"></text></g><g><title>advent_of_code_2022::day_04::parse_input::{{closure}} (1 samples, 1.33%)</title><rect x="12.0000%" y="453" width="1.3333%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="1"/><text x="12.2500%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 1.33%)</title><rect x="12.0000%" y="437" width="1.3333%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="1"/><text x="12.2500%" y="447.50"></text></g><g><title>&lt;advent_of_code_2022::day_04::Elf as core::str::traits::FromStr&gt;::from_str (1 samples, 1.33%)</title><rect x="12.0000%" y="421" width="1.3333%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="1"/><text x="12.2500%" y="431.50"></text></g><g><title>core::str::&lt;impl str&gt;::split_once (1 samples, 1.33%)</title><rect x="12.0000%" y="405" width="1.3333%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="1"/><text x="12.2500%" y="415.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 1.33%)</title><rect x="12.0000%" y="389" width="1.3333%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="1"/><text x="12.2500%" y="399.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 1.33%)</title><rect x="12.0000%" y="373" width="1.3333%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="12.2500%" y="383.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 1.33%)</title><rect x="12.0000%" y="357" width="1.3333%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="12.2500%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 1.33%)</title><rect x="13.3333%" y="565" width="1.3333%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="1"/><text x="13.5833%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 1.33%)</title><rect x="13.3333%" y="549" width="1.3333%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="1"/><text x="13.5833%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.33%)</title><rect x="13.3333%" y="533" width="1.3333%" height="15" fill="rgb(222,207,29)" fg:x="10" fg:w="1"/><text x="13.5833%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 1.33%)</title><rect x="13.3333%" y="517" width="1.3333%" height="15" fill="rgb(206,96,30)" fg:x="10" fg:w="1"/><text x="13.5833%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 1.33%)</title><rect x="13.3333%" y="501" width="1.3333%" height="15" fill="rgb(218,138,4)" fg:x="10" fg:w="1"/><text x="13.5833%" y="511.50"></text></g><g><title>advent_of_code_2022::day_07::calculate_dir_size::{{closure}} (1 samples, 1.33%)</title><rect x="13.3333%" y="485" width="1.3333%" height="15" fill="rgb(250,191,14)" fg:x="10" fg:w="1"/><text x="13.5833%" y="495.50"></text></g><g><title>advent_of_code_2022::day_07::get_path_size (1 samples, 1.33%)</title><rect x="13.3333%" y="469" width="1.3333%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="1"/><text x="13.5833%" y="479.50"></text></g><g><title>vfs::path::VfsPath::read_to_string (1 samples, 1.33%)</title><rect x="13.3333%" y="453" width="1.3333%" height="15" fill="rgb(206,27,48)" fg:x="10" fg:w="1"/><text x="13.5833%" y="463.50"></text></g><g><title>vfs::path::VfsPath::metadata (1 samples, 1.33%)</title><rect x="13.3333%" y="437" width="1.3333%" height="15" fill="rgb(225,35,8)" fg:x="10" fg:w="1"/><text x="13.5833%" y="447.50"></text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::metadata (1 samples, 1.33%)</title><rect x="13.3333%" y="421" width="1.3333%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="1"/><text x="13.5833%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="14.6667%" y="389" width="1.3333%" height="15" fill="rgb(247,123,22)" fg:x="11" fg:w="1"/><text x="14.9167%" y="399.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="14.6667%" y="373" width="1.3333%" height="15" fill="rgb(231,138,38)" fg:x="11" fg:w="1"/><text x="14.9167%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="14.6667%" y="357" width="1.3333%" height="15" fill="rgb(231,145,46)" fg:x="11" fg:w="1"/><text x="14.9167%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 2.67%)</title><rect x="14.6667%" y="469" width="2.6667%" height="15" fill="rgb(251,118,11)" fg:x="11" fg:w="2"/><text x="14.9167%" y="479.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 2.67%)</title><rect x="14.6667%" y="453" width="2.6667%" height="15" fill="rgb(217,147,25)" fg:x="11" fg:w="2"/><text x="14.9167%" y="463.50">al..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.67%)</title><rect x="14.6667%" y="437" width="2.6667%" height="15" fill="rgb(247,81,37)" fg:x="11" fg:w="2"/><text x="14.9167%" y="447.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2 samples, 2.67%)</title><rect x="14.6667%" y="421" width="2.6667%" height="15" fill="rgb(209,12,38)" fg:x="11" fg:w="2"/><text x="14.9167%" y="431.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 2.67%)</title><rect x="14.6667%" y="405" width="2.6667%" height="15" fill="rgb(227,1,9)" fg:x="11" fg:w="2"/><text x="14.9167%" y="415.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 1.33%)</title><rect x="16.0000%" y="389" width="1.3333%" height="15" fill="rgb(248,47,43)" fg:x="12" fg:w="1"/><text x="16.2500%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 1.33%)</title><rect x="16.0000%" y="373" width="1.3333%" height="15" fill="rgb(221,10,30)" fg:x="12" fg:w="1"/><text x="16.2500%" y="383.50"></text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir::{{closure}} (1 samples, 1.33%)</title><rect x="16.0000%" y="357" width="1.3333%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="1"/><text x="16.2500%" y="367.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (1 samples, 1.33%)</title><rect x="16.0000%" y="341" width="1.3333%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="1"/><text x="16.2500%" y="351.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 1.33%)</title><rect x="16.0000%" y="325" width="1.3333%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="1"/><text x="16.2500%" y="335.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 1.33%)</title><rect x="16.0000%" y="309" width="1.3333%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="1"/><text x="16.2500%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (1 samples, 1.33%)</title><rect x="16.0000%" y="293" width="1.3333%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="1"/><text x="16.2500%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 1.33%)</title><rect x="16.0000%" y="277" width="1.3333%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="1"/><text x="16.2500%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 1.33%)</title><rect x="16.0000%" y="261" width="1.3333%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="1"/><text x="16.2500%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 1.33%)</title><rect x="16.0000%" y="245" width="1.3333%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="1"/><text x="16.2500%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 1.33%)</title><rect x="16.0000%" y="229" width="1.3333%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="16.2500%" y="239.50"></text></g><g><title>advent_of_code_2022::day_07::calculate_dir_size (4 samples, 5.33%)</title><rect x="13.3333%" y="581" width="5.3333%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="4"/><text x="13.5833%" y="591.50">advent_..</text></g><g><title>vfs::path::VfsPath::read_dir (3 samples, 4.00%)</title><rect x="14.6667%" y="565" width="4.0000%" height="15" fill="rgb(251,115,12)" fg:x="11" fg:w="3"/><text x="14.9167%" y="575.50">vfs:..</text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir (3 samples, 4.00%)</title><rect x="14.6667%" y="549" width="4.0000%" height="15" fill="rgb(240,54,50)" fg:x="11" fg:w="3"/><text x="14.9167%" y="559.50">&lt;vfs..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 4.00%)</title><rect x="14.6667%" y="533" width="4.0000%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="3"/><text x="14.9167%" y="543.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="14.6667%" y="517" width="4.0000%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="3"/><text x="14.9167%" y="527.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="14.6667%" y="501" width="4.0000%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="3"/><text x="14.9167%" y="511.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="14.6667%" y="485" width="4.0000%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="3"/><text x="14.9167%" y="495.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="17.3333%" y="469" width="1.3333%" height="15" fill="rgb(236,212,23)" fg:x="13" fg:w="1"/><text x="17.5833%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 1.33%)</title><rect x="17.3333%" y="453" width="1.3333%" height="15" fill="rgb(242,79,21)" fg:x="13" fg:w="1"/><text x="17.5833%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 1.33%)</title><rect x="17.3333%" y="437" width="1.3333%" height="15" fill="rgb(211,96,35)" fg:x="13" fg:w="1"/><text x="17.5833%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 1.33%)</title><rect x="17.3333%" y="421" width="1.3333%" height="15" fill="rgb(253,215,40)" fg:x="13" fg:w="1"/><text x="17.5833%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 1.33%)</title><rect x="17.3333%" y="405" width="1.3333%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="1"/><text x="17.5833%" y="415.50"></text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir::{{closure}} (1 samples, 1.33%)</title><rect x="17.3333%" y="389" width="1.3333%" height="15" fill="rgb(208,190,38)" fg:x="13" fg:w="1"/><text x="17.5833%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 1.33%)</title><rect x="18.6667%" y="245" width="1.3333%" height="15" fill="rgb(235,213,38)" fg:x="14" fg:w="1"/><text x="18.9167%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 1.33%)</title><rect x="18.6667%" y="229" width="1.3333%" height="15" fill="rgb(237,122,38)" fg:x="14" fg:w="1"/><text x="18.9167%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="18.6667%" y="213" width="1.3333%" height="15" fill="rgb(244,218,35)" fg:x="14" fg:w="1"/><text x="18.9167%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 1.33%)</title><rect x="18.6667%" y="197" width="1.3333%" height="15" fill="rgb(240,68,47)" fg:x="14" fg:w="1"/><text x="18.9167%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 1.33%)</title><rect x="18.6667%" y="181" width="1.3333%" height="15" fill="rgb(210,16,53)" fg:x="14" fg:w="1"/><text x="18.9167%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="18.6667%" y="165" width="1.3333%" height="15" fill="rgb(235,124,12)" fg:x="14" fg:w="1"/><text x="18.9167%" y="175.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="18.6667%" y="149" width="1.3333%" height="15" fill="rgb(224,169,11)" fg:x="14" fg:w="1"/><text x="18.9167%" y="159.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="18.6667%" y="133" width="1.3333%" height="15" fill="rgb(250,166,2)" fg:x="14" fg:w="1"/><text x="18.9167%" y="143.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 1.33%)</title><rect x="18.6667%" y="117" width="1.3333%" height="15" fill="rgb(242,216,29)" fg:x="14" fg:w="1"/><text x="18.9167%" y="127.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 1.33%)</title><rect x="18.6667%" y="101" width="1.3333%" height="15" fill="rgb(230,116,27)" fg:x="14" fg:w="1"/><text x="18.9167%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 4.00%)</title><rect x="18.6667%" y="581" width="4.0000%" height="15" fill="rgb(228,99,48)" fg:x="14" fg:w="3"/><text x="18.9167%" y="591.50">core..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="18.6667%" y="565" width="4.0000%" height="15" fill="rgb(253,11,6)" fg:x="14" fg:w="3"/><text x="18.9167%" y="575.50">&lt;cor..</text></g><g><title>core::iter::adapters::try_process (3 samples, 4.00%)</title><rect x="18.6667%" y="549" width="4.0000%" height="15" fill="rgb(247,143,39)" fg:x="14" fg:w="3"/><text x="18.9167%" y="559.50">core..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3 samples, 4.00%)</title><rect x="18.6667%" y="533" width="4.0000%" height="15" fill="rgb(236,97,10)" fg:x="14" fg:w="3"/><text x="18.9167%" y="543.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 4.00%)</title><rect x="18.6667%" y="517" width="4.0000%" height="15" fill="rgb(233,208,19)" fg:x="14" fg:w="3"/><text x="18.9167%" y="527.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="18.6667%" y="501" width="4.0000%" height="15" fill="rgb(216,164,2)" fg:x="14" fg:w="3"/><text x="18.9167%" y="511.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="18.6667%" y="485" width="4.0000%" height="15" fill="rgb(220,129,5)" fg:x="14" fg:w="3"/><text x="18.9167%" y="495.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="18.6667%" y="469" width="4.0000%" height="15" fill="rgb(242,17,10)" fg:x="14" fg:w="3"/><text x="18.9167%" y="479.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 4.00%)</title><rect x="18.6667%" y="453" width="4.0000%" height="15" fill="rgb(242,107,0)" fg:x="14" fg:w="3"/><text x="18.9167%" y="463.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 4.00%)</title><rect x="18.6667%" y="437" width="4.0000%" height="15" fill="rgb(251,28,31)" fg:x="14" fg:w="3"/><text x="18.9167%" y="447.50">allo..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 4.00%)</title><rect x="18.6667%" y="421" width="4.0000%" height="15" fill="rgb(233,223,10)" fg:x="14" fg:w="3"/><text x="18.9167%" y="431.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 4.00%)</title><rect x="18.6667%" y="405" width="4.0000%" height="15" fill="rgb(215,21,27)" fg:x="14" fg:w="3"/><text x="18.9167%" y="415.50">core..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 4.00%)</title><rect x="18.6667%" y="389" width="4.0000%" height="15" fill="rgb(232,23,21)" fg:x="14" fg:w="3"/><text x="18.9167%" y="399.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 4.00%)</title><rect x="18.6667%" y="373" width="4.0000%" height="15" fill="rgb(244,5,23)" fg:x="14" fg:w="3"/><text x="18.9167%" y="383.50">core..</text></g><g><title>&lt;vfs::path::WalkDirIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 4.00%)</title><rect x="18.6667%" y="357" width="4.0000%" height="15" fill="rgb(226,81,46)" fg:x="14" fg:w="3"/><text x="18.9167%" y="367.50">&lt;vfs..</text></g><g><title>vfs::path::VfsPath::read_dir (3 samples, 4.00%)</title><rect x="18.6667%" y="341" width="4.0000%" height="15" fill="rgb(247,70,30)" fg:x="14" fg:w="3"/><text x="18.9167%" y="351.50">vfs:..</text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir (3 samples, 4.00%)</title><rect x="18.6667%" y="325" width="4.0000%" height="15" fill="rgb(212,68,19)" fg:x="14" fg:w="3"/><text x="18.9167%" y="335.50">&lt;vfs..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 4.00%)</title><rect x="18.6667%" y="309" width="4.0000%" height="15" fill="rgb(240,187,13)" fg:x="14" fg:w="3"/><text x="18.9167%" y="319.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="18.6667%" y="293" width="4.0000%" height="15" fill="rgb(223,113,26)" fg:x="14" fg:w="3"/><text x="18.9167%" y="303.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="18.6667%" y="277" width="4.0000%" height="15" fill="rgb(206,192,2)" fg:x="14" fg:w="3"/><text x="18.9167%" y="287.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="18.6667%" y="261" width="4.0000%" height="15" fill="rgb(241,108,4)" fg:x="14" fg:w="3"/><text x="18.9167%" y="271.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.67%)</title><rect x="20.0000%" y="245" width="2.6667%" height="15" fill="rgb(247,173,49)" fg:x="15" fg:w="2"/><text x="20.2500%" y="255.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2 samples, 2.67%)</title><rect x="20.0000%" y="229" width="2.6667%" height="15" fill="rgb(224,114,35)" fg:x="15" fg:w="2"/><text x="20.2500%" y="239.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 2.67%)</title><rect x="20.0000%" y="213" width="2.6667%" height="15" fill="rgb(245,159,27)" fg:x="15" fg:w="2"/><text x="20.2500%" y="223.50">co..</text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.67%)</title><rect x="20.0000%" y="197" width="2.6667%" height="15" fill="rgb(245,172,44)" fg:x="15" fg:w="2"/><text x="20.2500%" y="207.50">&lt;s..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.67%)</title><rect x="20.0000%" y="181" width="2.6667%" height="15" fill="rgb(236,23,11)" fg:x="15" fg:w="2"/><text x="20.2500%" y="191.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.67%)</title><rect x="20.0000%" y="165" width="2.6667%" height="15" fill="rgb(205,117,38)" fg:x="15" fg:w="2"/><text x="20.2500%" y="175.50">&lt;h..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 2.67%)</title><rect x="20.0000%" y="149" width="2.6667%" height="15" fill="rgb(237,72,25)" fg:x="15" fg:w="2"/><text x="20.2500%" y="159.50">ha..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 2.67%)</title><rect x="20.0000%" y="133" width="2.6667%" height="15" fill="rgb(244,70,9)" fg:x="15" fg:w="2"/><text x="20.2500%" y="143.50">ha..</text></g><g><title>advent_of_code_2022::day_07::day7_part1::&lt;impl advent_of_code_2022::aoc_factory::Day7Part1 for advent_of_code_2022::aoc_factory::Factory&gt;::day7_part1 (8 samples, 10.67%)</title><rect x="13.3333%" y="661" width="10.6667%" height="15" fill="rgb(217,125,39)" fg:x="10" fg:w="8"/><text x="13.5833%" y="671.50">advent_of_code_2..</text></g><g><title>aoc_runner::Runner::try_gen (8 samples, 10.67%)</title><rect x="13.3333%" y="645" width="10.6667%" height="15" fill="rgb(235,36,10)" fg:x="10" fg:w="8"/><text x="13.5833%" y="655.50">aoc_runner::Runn..</text></g><g><title>&lt;advent_of_code_2022::day_07::day7_part2::RunnerStruct as aoc_runner::Runner&gt;::gen (8 samples, 10.67%)</title><rect x="13.3333%" y="629" width="10.6667%" height="15" fill="rgb(251,123,47)" fg:x="10" fg:w="8"/><text x="13.5833%" y="639.50">&lt;advent_of_code_..</text></g><g><title>advent_of_code_2022::day_07::parse_input (8 samples, 10.67%)</title><rect x="13.3333%" y="613" width="10.6667%" height="15" fill="rgb(221,13,13)" fg:x="10" fg:w="8"/><text x="13.5833%" y="623.50">advent_of_code_2..</text></g><g><title>&lt;advent_of_code_2022::day_07::Input as core::str::traits::FromStr&gt;::from_str (8 samples, 10.67%)</title><rect x="13.3333%" y="597" width="10.6667%" height="15" fill="rgb(238,131,9)" fg:x="10" fg:w="8"/><text x="13.5833%" y="607.50">&lt;advent_of_code_..</text></g><g><title>vfs::path::VfsPath::join (1 samples, 1.33%)</title><rect x="22.6667%" y="581" width="1.3333%" height="15" fill="rgb(211,50,8)" fg:x="17" fg:w="1"/><text x="22.9167%" y="591.50"></text></g><g><title>vfs::path::VfsPath::join_internal (1 samples, 1.33%)</title><rect x="22.6667%" y="565" width="1.3333%" height="15" fill="rgb(245,182,24)" fg:x="17" fg:w="1"/><text x="22.9167%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 1.33%)</title><rect x="22.6667%" y="549" width="1.3333%" height="15" fill="rgb(242,14,37)" fg:x="17" fg:w="1"/><text x="22.9167%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 1.33%)</title><rect x="22.6667%" y="533" width="1.3333%" height="15" fill="rgb(246,228,12)" fg:x="17" fg:w="1"/><text x="22.9167%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 1.33%)</title><rect x="22.6667%" y="517" width="1.3333%" height="15" fill="rgb(213,55,15)" fg:x="17" fg:w="1"/><text x="22.9167%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 1.33%)</title><rect x="22.6667%" y="501" width="1.3333%" height="15" fill="rgb(209,9,3)" fg:x="17" fg:w="1"/><text x="22.9167%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 1.33%)</title><rect x="24.0000%" y="565" width="1.3333%" height="15" fill="rgb(230,59,30)" fg:x="18" fg:w="1"/><text x="24.2500%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 1.33%)</title><rect x="24.0000%" y="549" width="1.3333%" height="15" fill="rgb(209,121,21)" fg:x="18" fg:w="1"/><text x="24.2500%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.33%)</title><rect x="24.0000%" y="533" width="1.3333%" height="15" fill="rgb(220,109,13)" fg:x="18" fg:w="1"/><text x="24.2500%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 1.33%)</title><rect x="24.0000%" y="517" width="1.3333%" height="15" fill="rgb(232,18,1)" fg:x="18" fg:w="1"/><text x="24.2500%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = vfs::path::VfsPath&gt;&gt; (1 samples, 1.33%)</title><rect x="24.0000%" y="501" width="1.3333%" height="15" fill="rgb(215,41,42)" fg:x="18" fg:w="1"/><text x="24.2500%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = alloc::string::String&gt;,vfs::path::VfsPath::read_dir::{{closure}}&gt;&gt; (1 samples, 1.33%)</title><rect x="24.0000%" y="485" width="1.3333%" height="15" fill="rgb(224,123,36)" fg:x="18" fg:w="1"/><text x="24.2500%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = alloc::string::String&gt;&gt; (1 samples, 1.33%)</title><rect x="24.0000%" y="469" width="1.3333%" height="15" fill="rgb(240,125,3)" fg:x="18" fg:w="1"/><text x="24.2500%" y="479.50"></text></g><g><title>cfree (1 samples, 1.33%)</title><rect x="24.0000%" y="453" width="1.3333%" height="15" fill="rgb(205,98,50)" fg:x="18" fg:w="1"/><text x="24.2500%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 1.33%)</title><rect x="25.3333%" y="469" width="1.3333%" height="15" fill="rgb(205,185,37)" fg:x="19" fg:w="1"/><text x="25.5833%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 1.33%)</title><rect x="25.3333%" y="453" width="1.3333%" height="15" fill="rgb(238,207,15)" fg:x="19" fg:w="1"/><text x="25.5833%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="25.3333%" y="437" width="1.3333%" height="15" fill="rgb(213,199,42)" fg:x="19" fg:w="1"/><text x="25.5833%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 1.33%)</title><rect x="25.3333%" y="421" width="1.3333%" height="15" fill="rgb(235,201,11)" fg:x="19" fg:w="1"/><text x="25.5833%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 1.33%)</title><rect x="25.3333%" y="405" width="1.3333%" height="15" fill="rgb(207,46,11)" fg:x="19" fg:w="1"/><text x="25.5833%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 1.33%)</title><rect x="25.3333%" y="389" width="1.3333%" height="15" fill="rgb(241,35,35)" fg:x="19" fg:w="1"/><text x="25.5833%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 1.33%)</title><rect x="25.3333%" y="373" width="1.3333%" height="15" fill="rgb(243,32,47)" fg:x="19" fg:w="1"/><text x="25.5833%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="26.6667%" y="421" width="1.3333%" height="15" fill="rgb(247,202,23)" fg:x="20" fg:w="1"/><text x="26.9167%" y="431.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="26.6667%" y="405" width="1.3333%" height="15" fill="rgb(219,102,11)" fg:x="20" fg:w="1"/><text x="26.9167%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="26.6667%" y="389" width="1.3333%" height="15" fill="rgb(243,110,44)" fg:x="20" fg:w="1"/><text x="26.9167%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 1.33%)</title><rect x="26.6667%" y="373" width="1.3333%" height="15" fill="rgb(222,74,54)" fg:x="20" fg:w="1"/><text x="26.9167%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 1.33%)</title><rect x="26.6667%" y="357" width="1.3333%" height="15" fill="rgb(216,99,12)" fg:x="20" fg:w="1"/><text x="26.9167%" y="367.50"></text></g><g><title>advent_of_code_2022::day_07::calculate_dir_size (4 samples, 5.33%)</title><rect x="24.0000%" y="581" width="5.3333%" height="15" fill="rgb(226,22,26)" fg:x="18" fg:w="4"/><text x="24.2500%" y="591.50">advent_..</text></g><g><title>vfs::path::VfsPath::read_dir (3 samples, 4.00%)</title><rect x="25.3333%" y="565" width="4.0000%" height="15" fill="rgb(217,163,10)" fg:x="19" fg:w="3"/><text x="25.5833%" y="575.50">vfs:..</text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir (3 samples, 4.00%)</title><rect x="25.3333%" y="549" width="4.0000%" height="15" fill="rgb(213,25,53)" fg:x="19" fg:w="3"/><text x="25.5833%" y="559.50">&lt;vfs..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 4.00%)</title><rect x="25.3333%" y="533" width="4.0000%" height="15" fill="rgb(252,105,26)" fg:x="19" fg:w="3"/><text x="25.5833%" y="543.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="25.3333%" y="517" width="4.0000%" height="15" fill="rgb(220,39,43)" fg:x="19" fg:w="3"/><text x="25.5833%" y="527.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="25.3333%" y="501" width="4.0000%" height="15" fill="rgb(229,68,48)" fg:x="19" fg:w="3"/><text x="25.5833%" y="511.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="25.3333%" y="485" width="4.0000%" height="15" fill="rgb(252,8,32)" fg:x="19" fg:w="3"/><text x="25.5833%" y="495.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.67%)</title><rect x="26.6667%" y="469" width="2.6667%" height="15" fill="rgb(223,20,43)" fg:x="20" fg:w="2"/><text x="26.9167%" y="479.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2 samples, 2.67%)</title><rect x="26.6667%" y="453" width="2.6667%" height="15" fill="rgb(229,81,49)" fg:x="20" fg:w="2"/><text x="26.9167%" y="463.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 2.67%)</title><rect x="26.6667%" y="437" width="2.6667%" height="15" fill="rgb(236,28,36)" fg:x="20" fg:w="2"/><text x="26.9167%" y="447.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 1.33%)</title><rect x="28.0000%" y="421" width="1.3333%" height="15" fill="rgb(249,185,26)" fg:x="21" fg:w="1"/><text x="28.2500%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 1.33%)</title><rect x="28.0000%" y="405" width="1.3333%" height="15" fill="rgb(249,174,33)" fg:x="21" fg:w="1"/><text x="28.2500%" y="415.50"></text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir::{{closure}} (1 samples, 1.33%)</title><rect x="28.0000%" y="389" width="1.3333%" height="15" fill="rgb(233,201,37)" fg:x="21" fg:w="1"/><text x="28.2500%" y="399.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (1 samples, 1.33%)</title><rect x="28.0000%" y="373" width="1.3333%" height="15" fill="rgb(221,78,26)" fg:x="21" fg:w="1"/><text x="28.2500%" y="383.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 1.33%)</title><rect x="28.0000%" y="357" width="1.3333%" height="15" fill="rgb(250,127,30)" fg:x="21" fg:w="1"/><text x="28.2500%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 1.33%)</title><rect x="28.0000%" y="341" width="1.3333%" height="15" fill="rgb(230,49,44)" fg:x="21" fg:w="1"/><text x="28.2500%" y="351.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 1.33%)</title><rect x="28.0000%" y="325" width="1.3333%" height="15" fill="rgb(229,67,23)" fg:x="21" fg:w="1"/><text x="28.2500%" y="335.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 1.33%)</title><rect x="28.0000%" y="309" width="1.3333%" height="15" fill="rgb(249,83,47)" fg:x="21" fg:w="1"/><text x="28.2500%" y="319.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 1.33%)</title><rect x="28.0000%" y="293" width="1.3333%" height="15" fill="rgb(215,43,3)" fg:x="21" fg:w="1"/><text x="28.2500%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="29.3333%" y="341" width="1.3333%" height="15" fill="rgb(238,154,13)" fg:x="22" fg:w="1"/><text x="29.5833%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="29.3333%" y="325" width="1.3333%" height="15" fill="rgb(219,56,2)" fg:x="22" fg:w="1"/><text x="29.5833%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.33%)</title><rect x="29.3333%" y="309" width="1.3333%" height="15" fill="rgb(233,0,4)" fg:x="22" fg:w="1"/><text x="29.5833%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 1.33%)</title><rect x="29.3333%" y="293" width="1.3333%" height="15" fill="rgb(235,30,7)" fg:x="22" fg:w="1"/><text x="29.5833%" y="303.50"></text></g><g><title>vfs::path::VfsPath::read_dir::{{closure}} (1 samples, 1.33%)</title><rect x="29.3333%" y="277" width="1.3333%" height="15" fill="rgb(250,79,13)" fg:x="22" fg:w="1"/><text x="29.5833%" y="287.50"></text></g><g><title>alloc::fmt::format (1 samples, 1.33%)</title><rect x="29.3333%" y="261" width="1.3333%" height="15" fill="rgb(211,146,34)" fg:x="22" fg:w="1"/><text x="29.5833%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 1.33%)</title><rect x="29.3333%" y="245" width="1.3333%" height="15" fill="rgb(228,22,38)" fg:x="22" fg:w="1"/><text x="29.5833%" y="255.50"></text></g><g><title>alloc::fmt::format::{{closure}} (1 samples, 1.33%)</title><rect x="29.3333%" y="229" width="1.3333%" height="15" fill="rgb(235,168,5)" fg:x="22" fg:w="1"/><text x="29.5833%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 1.33%)</title><rect x="29.3333%" y="213" width="1.3333%" height="15" fill="rgb(221,155,16)" fg:x="22" fg:w="1"/><text x="29.5833%" y="223.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 1.33%)</title><rect x="29.3333%" y="197" width="1.3333%" height="15" fill="rgb(215,215,53)" fg:x="22" fg:w="1"/><text x="29.5833%" y="207.50"></text></g><g><title>core::fmt::write (1 samples, 1.33%)</title><rect x="29.3333%" y="181" width="1.3333%" height="15" fill="rgb(223,4,10)" fg:x="22" fg:w="1"/><text x="29.5833%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="29.3333%" y="165" width="1.3333%" height="15" fill="rgb(234,103,6)" fg:x="22" fg:w="1"/><text x="29.5833%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="29.3333%" y="149" width="1.3333%" height="15" fill="rgb(227,97,0)" fg:x="22" fg:w="1"/><text x="29.5833%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 1.33%)</title><rect x="30.6667%" y="245" width="1.3333%" height="15" fill="rgb(234,150,53)" fg:x="23" fg:w="1"/><text x="30.9167%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 1.33%)</title><rect x="30.6667%" y="229" width="1.3333%" height="15" fill="rgb(228,201,54)" fg:x="23" fg:w="1"/><text x="30.9167%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="30.6667%" y="213" width="1.3333%" height="15" fill="rgb(222,22,37)" fg:x="23" fg:w="1"/><text x="30.9167%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 1.33%)</title><rect x="30.6667%" y="197" width="1.3333%" height="15" fill="rgb(237,53,32)" fg:x="23" fg:w="1"/><text x="30.9167%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 1.33%)</title><rect x="30.6667%" y="181" width="1.3333%" height="15" fill="rgb(233,25,53)" fg:x="23" fg:w="1"/><text x="30.9167%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="30.6667%" y="165" width="1.3333%" height="15" fill="rgb(210,40,34)" fg:x="23" fg:w="1"/><text x="30.9167%" y="175.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="30.6667%" y="149" width="1.3333%" height="15" fill="rgb(241,220,44)" fg:x="23" fg:w="1"/><text x="30.9167%" y="159.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="30.6667%" y="133" width="1.3333%" height="15" fill="rgb(235,28,35)" fg:x="23" fg:w="1"/><text x="30.9167%" y="143.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 1.33%)</title><rect x="30.6667%" y="117" width="1.3333%" height="15" fill="rgb(210,56,17)" fg:x="23" fg:w="1"/><text x="30.9167%" y="127.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 1.33%)</title><rect x="30.6667%" y="101" width="1.3333%" height="15" fill="rgb(224,130,29)" fg:x="23" fg:w="1"/><text x="30.9167%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 4.00%)</title><rect x="29.3333%" y="581" width="4.0000%" height="15" fill="rgb(235,212,8)" fg:x="22" fg:w="3"/><text x="29.5833%" y="591.50">core..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="29.3333%" y="565" width="4.0000%" height="15" fill="rgb(223,33,50)" fg:x="22" fg:w="3"/><text x="29.5833%" y="575.50">&lt;cor..</text></g><g><title>core::iter::adapters::try_process (3 samples, 4.00%)</title><rect x="29.3333%" y="549" width="4.0000%" height="15" fill="rgb(219,149,13)" fg:x="22" fg:w="3"/><text x="29.5833%" y="559.50">core..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3 samples, 4.00%)</title><rect x="29.3333%" y="533" width="4.0000%" height="15" fill="rgb(250,156,29)" fg:x="22" fg:w="3"/><text x="29.5833%" y="543.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 4.00%)</title><rect x="29.3333%" y="517" width="4.0000%" height="15" fill="rgb(216,193,19)" fg:x="22" fg:w="3"/><text x="29.5833%" y="527.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="29.3333%" y="501" width="4.0000%" height="15" fill="rgb(216,135,14)" fg:x="22" fg:w="3"/><text x="29.5833%" y="511.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="29.3333%" y="485" width="4.0000%" height="15" fill="rgb(241,47,5)" fg:x="22" fg:w="3"/><text x="29.5833%" y="495.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="29.3333%" y="469" width="4.0000%" height="15" fill="rgb(233,42,35)" fg:x="22" fg:w="3"/><text x="29.5833%" y="479.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 4.00%)</title><rect x="29.3333%" y="453" width="4.0000%" height="15" fill="rgb(231,13,6)" fg:x="22" fg:w="3"/><text x="29.5833%" y="463.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 4.00%)</title><rect x="29.3333%" y="437" width="4.0000%" height="15" fill="rgb(207,181,40)" fg:x="22" fg:w="3"/><text x="29.5833%" y="447.50">allo..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 4.00%)</title><rect x="29.3333%" y="421" width="4.0000%" height="15" fill="rgb(254,173,49)" fg:x="22" fg:w="3"/><text x="29.5833%" y="431.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 4.00%)</title><rect x="29.3333%" y="405" width="4.0000%" height="15" fill="rgb(221,1,38)" fg:x="22" fg:w="3"/><text x="29.5833%" y="415.50">core..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 4.00%)</title><rect x="29.3333%" y="389" width="4.0000%" height="15" fill="rgb(206,124,46)" fg:x="22" fg:w="3"/><text x="29.5833%" y="399.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 4.00%)</title><rect x="29.3333%" y="373" width="4.0000%" height="15" fill="rgb(249,21,11)" fg:x="22" fg:w="3"/><text x="29.5833%" y="383.50">core..</text></g><g><title>&lt;vfs::path::WalkDirIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 4.00%)</title><rect x="29.3333%" y="357" width="4.0000%" height="15" fill="rgb(222,201,40)" fg:x="22" fg:w="3"/><text x="29.5833%" y="367.50">&lt;vfs..</text></g><g><title>vfs::path::VfsPath::read_dir (2 samples, 2.67%)</title><rect x="30.6667%" y="341" width="2.6667%" height="15" fill="rgb(235,61,29)" fg:x="23" fg:w="2"/><text x="30.9167%" y="351.50">vf..</text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir (2 samples, 2.67%)</title><rect x="30.6667%" y="325" width="2.6667%" height="15" fill="rgb(219,207,3)" fg:x="23" fg:w="2"/><text x="30.9167%" y="335.50">&lt;v..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 2.67%)</title><rect x="30.6667%" y="309" width="2.6667%" height="15" fill="rgb(222,56,46)" fg:x="23" fg:w="2"/><text x="30.9167%" y="319.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 2.67%)</title><rect x="30.6667%" y="293" width="2.6667%" height="15" fill="rgb(239,76,54)" fg:x="23" fg:w="2"/><text x="30.9167%" y="303.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 2.67%)</title><rect x="30.6667%" y="277" width="2.6667%" height="15" fill="rgb(231,124,27)" fg:x="23" fg:w="2"/><text x="30.9167%" y="287.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 2.67%)</title><rect x="30.6667%" y="261" width="2.6667%" height="15" fill="rgb(249,195,6)" fg:x="23" fg:w="2"/><text x="30.9167%" y="271.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="32.0000%" y="245" width="1.3333%" height="15" fill="rgb(237,174,47)" fg:x="24" fg:w="1"/><text x="32.2500%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 1.33%)</title><rect x="32.0000%" y="229" width="1.3333%" height="15" fill="rgb(206,201,31)" fg:x="24" fg:w="1"/><text x="32.2500%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 1.33%)</title><rect x="32.0000%" y="213" width="1.3333%" height="15" fill="rgb(231,57,52)" fg:x="24" fg:w="1"/><text x="32.2500%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 1.33%)</title><rect x="32.0000%" y="197" width="1.3333%" height="15" fill="rgb(248,177,22)" fg:x="24" fg:w="1"/><text x="32.2500%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 1.33%)</title><rect x="32.0000%" y="181" width="1.3333%" height="15" fill="rgb(215,211,37)" fg:x="24" fg:w="1"/><text x="32.2500%" y="191.50"></text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir::{{closure}} (1 samples, 1.33%)</title><rect x="32.0000%" y="165" width="1.3333%" height="15" fill="rgb(241,128,51)" fg:x="24" fg:w="1"/><text x="32.2500%" y="175.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (1 samples, 1.33%)</title><rect x="32.0000%" y="149" width="1.3333%" height="15" fill="rgb(227,165,31)" fg:x="24" fg:w="1"/><text x="32.2500%" y="159.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 1.33%)</title><rect x="32.0000%" y="133" width="1.3333%" height="15" fill="rgb(228,167,24)" fg:x="24" fg:w="1"/><text x="32.2500%" y="143.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 1.33%)</title><rect x="32.0000%" y="117" width="1.3333%" height="15" fill="rgb(228,143,12)" fg:x="24" fg:w="1"/><text x="32.2500%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (1 samples, 1.33%)</title><rect x="32.0000%" y="101" width="1.3333%" height="15" fill="rgb(249,149,8)" fg:x="24" fg:w="1"/><text x="32.2500%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 1.33%)</title><rect x="32.0000%" y="85" width="1.3333%" height="15" fill="rgb(243,35,44)" fg:x="24" fg:w="1"/><text x="32.2500%" y="95.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 1.33%)</title><rect x="32.0000%" y="69" width="1.3333%" height="15" fill="rgb(246,89,9)" fg:x="24" fg:w="1"/><text x="32.2500%" y="79.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 1.33%)</title><rect x="32.0000%" y="53" width="1.3333%" height="15" fill="rgb(233,213,13)" fg:x="24" fg:w="1"/><text x="32.2500%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 1.33%)</title><rect x="32.0000%" y="37" width="1.3333%" height="15" fill="rgb(233,141,41)" fg:x="24" fg:w="1"/><text x="32.2500%" y="47.50"></text></g><g><title>advent_of_code_2022::day_07::day7_part2::&lt;impl advent_of_code_2022::aoc_factory::Day7Part2 for advent_of_code_2022::aoc_factory::Factory&gt;::day7_part2 (8 samples, 10.67%)</title><rect x="24.0000%" y="661" width="10.6667%" height="15" fill="rgb(239,167,4)" fg:x="18" fg:w="8"/><text x="24.2500%" y="671.50">advent_of_code_2..</text></g><g><title>aoc_runner::Runner::try_gen (8 samples, 10.67%)</title><rect x="24.0000%" y="645" width="10.6667%" height="15" fill="rgb(209,217,16)" fg:x="18" fg:w="8"/><text x="24.2500%" y="655.50">aoc_runner::Runn..</text></g><g><title>&lt;advent_of_code_2022::day_07::day7_part2::RunnerStruct as aoc_runner::Runner&gt;::gen (8 samples, 10.67%)</title><rect x="24.0000%" y="629" width="10.6667%" height="15" fill="rgb(219,88,35)" fg:x="18" fg:w="8"/><text x="24.2500%" y="639.50">&lt;advent_of_code_..</text></g><g><title>advent_of_code_2022::day_07::parse_input (8 samples, 10.67%)</title><rect x="24.0000%" y="613" width="10.6667%" height="15" fill="rgb(220,193,23)" fg:x="18" fg:w="8"/><text x="24.2500%" y="623.50">advent_of_code_2..</text></g><g><title>&lt;advent_of_code_2022::day_07::Input as core::str::traits::FromStr&gt;::from_str (8 samples, 10.67%)</title><rect x="24.0000%" y="597" width="10.6667%" height="15" fill="rgb(230,90,52)" fg:x="18" fg:w="8"/><text x="24.2500%" y="607.50">&lt;advent_of_code_..</text></g><g><title>vfs::path::VfsPath::join (1 samples, 1.33%)</title><rect x="33.3333%" y="581" width="1.3333%" height="15" fill="rgb(252,106,19)" fg:x="25" fg:w="1"/><text x="33.5833%" y="591.50"></text></g><g><title>vfs::path::VfsPath::join_internal (1 samples, 1.33%)</title><rect x="33.3333%" y="565" width="1.3333%" height="15" fill="rgb(206,74,20)" fg:x="25" fg:w="1"/><text x="33.5833%" y="575.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="33.3333%" y="549" width="1.3333%" height="15" fill="rgb(230,138,44)" fg:x="25" fg:w="1"/><text x="33.5833%" y="559.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 1.33%)</title><rect x="33.3333%" y="533" width="1.3333%" height="15" fill="rgb(235,182,43)" fg:x="25" fg:w="1"/><text x="33.5833%" y="543.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 1.33%)</title><rect x="33.3333%" y="517" width="1.3333%" height="15" fill="rgb(242,16,51)" fg:x="25" fg:w="1"/><text x="33.5833%" y="527.50"></text></g><g><title>&lt;advent_of_code_2022::day_02::day2_part2::RunnerStruct as aoc_runner::Runner&gt;::run (1 samples, 1.33%)</title><rect x="34.6667%" y="645" width="1.3333%" height="15" fill="rgb(248,9,4)" fg:x="26" fg:w="1"/><text x="34.9167%" y="655.50"></text></g><g><title>advent_of_code_2022::day_02::part2 (1 samples, 1.33%)</title><rect x="34.6667%" y="629" width="1.3333%" height="15" fill="rgb(210,31,22)" fg:x="26" fg:w="1"/><text x="34.9167%" y="639.50"></text></g><g><title>advent_of_code_2022::day_02::calculate_game_score (1 samples, 1.33%)</title><rect x="34.6667%" y="613" width="1.3333%" height="15" fill="rgb(239,54,39)" fg:x="26" fg:w="1"/><text x="34.9167%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 1.33%)</title><rect x="34.6667%" y="597" width="1.3333%" height="15" fill="rgb(230,99,41)" fg:x="26" fg:w="1"/><text x="34.9167%" y="607.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 1.33%)</title><rect x="34.6667%" y="581" width="1.3333%" height="15" fill="rgb(253,106,12)" fg:x="26" fg:w="1"/><text x="34.9167%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.33%)</title><rect x="34.6667%" y="565" width="1.3333%" height="15" fill="rgb(213,46,41)" fg:x="26" fg:w="1"/><text x="34.9167%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.33%)</title><rect x="34.6667%" y="549" width="1.3333%" height="15" fill="rgb(215,133,35)" fg:x="26" fg:w="1"/><text x="34.9167%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 1.33%)</title><rect x="34.6667%" y="533" width="1.3333%" height="15" fill="rgb(213,28,5)" fg:x="26" fg:w="1"/><text x="34.9167%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 1.33%)</title><rect x="34.6667%" y="517" width="1.3333%" height="15" fill="rgb(215,77,49)" fg:x="26" fg:w="1"/><text x="34.9167%" y="527.50"></text></g><g><title>advent_of_code_2022::day_02::calculate_game_score::{{closure}} (1 samples, 1.33%)</title><rect x="34.6667%" y="501" width="1.3333%" height="15" fill="rgb(248,100,22)" fg:x="26" fg:w="1"/><text x="34.9167%" y="511.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 1.33%)</title><rect x="34.6667%" y="485" width="1.3333%" height="15" fill="rgb(208,67,9)" fg:x="26" fg:w="1"/><text x="34.9167%" y="495.50"></text></g><g><title>&lt;advent_of_code_2022::day_02::RoundPart2 as core::str::traits::FromStr&gt;::from_str (1 samples, 1.33%)</title><rect x="34.6667%" y="469" width="1.3333%" height="15" fill="rgb(219,133,21)" fg:x="26" fg:w="1"/><text x="34.9167%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 1.33%)</title><rect x="34.6667%" y="453" width="1.3333%" height="15" fill="rgb(246,46,29)" fg:x="26" fg:w="1"/><text x="34.9167%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 1.33%)</title><rect x="34.6667%" y="437" width="1.3333%" height="15" fill="rgb(246,185,52)" fg:x="26" fg:w="1"/><text x="34.9167%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 1.33%)</title><rect x="34.6667%" y="421" width="1.3333%" height="15" fill="rgb(252,136,11)" fg:x="26" fg:w="1"/><text x="34.9167%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 1.33%)</title><rect x="34.6667%" y="405" width="1.3333%" height="15" fill="rgb(219,138,53)" fg:x="26" fg:w="1"/><text x="34.9167%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.33%)</title><rect x="34.6667%" y="389" width="1.3333%" height="15" fill="rgb(211,51,23)" fg:x="26" fg:w="1"/><text x="34.9167%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 1.33%)</title><rect x="34.6667%" y="373" width="1.3333%" height="15" fill="rgb(247,221,28)" fg:x="26" fg:w="1"/><text x="34.9167%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 1.33%)</title><rect x="34.6667%" y="357" width="1.3333%" height="15" fill="rgb(251,222,45)" fg:x="26" fg:w="1"/><text x="34.9167%" y="367.50"></text></g><g><title>cfree (1 samples, 1.33%)</title><rect x="34.6667%" y="341" width="1.3333%" height="15" fill="rgb(217,162,53)" fg:x="26" fg:w="1"/><text x="34.9167%" y="351.50"></text></g><g><title>&lt;advent_of_code_2022::day_06::day6_part1::RunnerStruct as aoc_runner::Runner&gt;::run (1 samples, 1.33%)</title><rect x="36.0000%" y="645" width="1.3333%" height="15" fill="rgb(229,93,14)" fg:x="27" fg:w="1"/><text x="36.2500%" y="655.50"></text></g><g><title>advent_of_code_2022::day_06::part1 (1 samples, 1.33%)</title><rect x="36.0000%" y="629" width="1.3333%" height="15" fill="rgb(209,67,49)" fg:x="27" fg:w="1"/><text x="36.2500%" y="639.50"></text></g><g><title>advent_of_code_2022::day_06::start_packet (1 samples, 1.33%)</title><rect x="36.0000%" y="613" width="1.3333%" height="15" fill="rgb(213,87,29)" fg:x="27" fg:w="1"/><text x="36.2500%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (1 samples, 1.33%)</title><rect x="36.0000%" y="597" width="1.3333%" height="15" fill="rgb(205,151,52)" fg:x="27" fg:w="1"/><text x="36.2500%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 1.33%)</title><rect x="36.0000%" y="581" width="1.3333%" height="15" fill="rgb(253,215,39)" fg:x="27" fg:w="1"/><text x="36.2500%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (1 samples, 1.33%)</title><rect x="36.0000%" y="565" width="1.3333%" height="15" fill="rgb(221,220,41)" fg:x="27" fg:w="1"/><text x="36.2500%" y="575.50"></text></g><g><title>advent_of_code_2022::day_06::start_packet::{{closure}} (1 samples, 1.33%)</title><rect x="36.0000%" y="549" width="1.3333%" height="15" fill="rgb(218,133,21)" fg:x="27" fg:w="1"/><text x="36.2500%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (1 samples, 1.33%)</title><rect x="36.0000%" y="533" width="1.3333%" height="15" fill="rgb(221,193,43)" fg:x="27" fg:w="1"/><text x="36.2500%" y="543.50"></text></g><g><title>advent_of_code_2022::day_06::start_packet::{{closure}}::{{closure}} (1 samples, 1.33%)</title><rect x="36.0000%" y="517" width="1.3333%" height="15" fill="rgb(240,128,52)" fg:x="27" fg:w="1"/><text x="36.2500%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 1.33%)</title><rect x="36.0000%" y="501" width="1.3333%" height="15" fill="rgb(253,114,12)" fg:x="27" fg:w="1"/><text x="36.2500%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 1.33%)</title><rect x="36.0000%" y="485" width="1.3333%" height="15" fill="rgb(215,223,47)" fg:x="27" fg:w="1"/><text x="36.2500%" y="495.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 1.33%)</title><rect x="36.0000%" y="469" width="1.3333%" height="15" fill="rgb(248,225,23)" fg:x="27" fg:w="1"/><text x="36.2500%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.33%)</title><rect x="36.0000%" y="453" width="1.3333%" height="15" fill="rgb(250,108,0)" fg:x="27" fg:w="1"/><text x="36.2500%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 1.33%)</title><rect x="36.0000%" y="437" width="1.3333%" height="15" fill="rgb(228,208,7)" fg:x="27" fg:w="1"/><text x="36.2500%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 1.33%)</title><rect x="36.0000%" y="421" width="1.3333%" height="15" fill="rgb(244,45,10)" fg:x="27" fg:w="1"/><text x="36.2500%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 1.33%)</title><rect x="36.0000%" y="405" width="1.3333%" height="15" fill="rgb(207,125,25)" fg:x="27" fg:w="1"/><text x="36.2500%" y="415.50"></text></g><g><title>advent_of_code_2022::day_06::start_packet::{{closure}}::{{closure}}::{{closure}} (1 samples, 1.33%)</title><rect x="36.0000%" y="389" width="1.3333%" height="15" fill="rgb(210,195,18)" fg:x="27" fg:w="1"/><text x="36.2500%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 1.33%)</title><rect x="36.0000%" y="373" width="1.3333%" height="15" fill="rgb(249,80,12)" fg:x="27" fg:w="1"/><text x="36.2500%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::ne (1 samples, 1.33%)</title><rect x="36.0000%" y="357" width="1.3333%" height="15" fill="rgb(221,65,9)" fg:x="27" fg:w="1"/><text x="36.2500%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 1.33%)</title><rect x="37.3333%" y="469" width="1.3333%" height="15" fill="rgb(235,49,36)" fg:x="28" fg:w="1"/><text x="37.5833%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.33%)</title><rect x="37.3333%" y="453" width="1.3333%" height="15" fill="rgb(225,32,20)" fg:x="28" fg:w="1"/><text x="37.5833%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 1.33%)</title><rect x="37.3333%" y="437" width="1.3333%" height="15" fill="rgb(215,141,46)" fg:x="28" fg:w="1"/><text x="37.5833%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 1.33%)</title><rect x="37.3333%" y="421" width="1.3333%" height="15" fill="rgb(250,160,47)" fg:x="28" fg:w="1"/><text x="37.5833%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 1.33%)</title><rect x="37.3333%" y="405" width="1.3333%" height="15" fill="rgb(216,222,40)" fg:x="28" fg:w="1"/><text x="37.5833%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 1.33%)</title><rect x="37.3333%" y="389" width="1.3333%" height="15" fill="rgb(234,217,39)" fg:x="28" fg:w="1"/><text x="37.5833%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 1.33%)</title><rect x="37.3333%" y="373" width="1.3333%" height="15" fill="rgb(207,178,40)" fg:x="28" fg:w="1"/><text x="37.5833%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 1.33%)</title><rect x="37.3333%" y="357" width="1.3333%" height="15" fill="rgb(221,136,13)" fg:x="28" fg:w="1"/><text x="37.5833%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 1.33%)</title><rect x="37.3333%" y="341" width="1.3333%" height="15" fill="rgb(249,199,10)" fg:x="28" fg:w="1"/><text x="37.5833%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 1.33%)</title><rect x="37.3333%" y="325" width="1.3333%" height="15" fill="rgb(249,222,13)" fg:x="28" fg:w="1"/><text x="37.5833%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 1.33%)</title><rect x="37.3333%" y="309" width="1.3333%" height="15" fill="rgb(244,185,38)" fg:x="28" fg:w="1"/><text x="37.5833%" y="319.50"></text></g><g><title>&lt;vfs::path::WalkDirIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.67%)</title><rect x="37.3333%" y="501" width="2.6667%" height="15" fill="rgb(236,202,9)" fg:x="28" fg:w="2"/><text x="37.5833%" y="511.50">&lt;v..</text></g><g><title>vfs::path::VfsPath::read_dir (2 samples, 2.67%)</title><rect x="37.3333%" y="485" width="2.6667%" height="15" fill="rgb(250,229,37)" fg:x="28" fg:w="2"/><text x="37.5833%" y="495.50">vf..</text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir (1 samples, 1.33%)</title><rect x="38.6667%" y="469" width="1.3333%" height="15" fill="rgb(206,174,23)" fg:x="29" fg:w="1"/><text x="38.9167%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.33%)</title><rect x="38.6667%" y="453" width="1.3333%" height="15" fill="rgb(211,33,43)" fg:x="29" fg:w="1"/><text x="38.9167%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="38.6667%" y="437" width="1.3333%" height="15" fill="rgb(245,58,50)" fg:x="29" fg:w="1"/><text x="38.9167%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="38.6667%" y="421" width="1.3333%" height="15" fill="rgb(244,68,36)" fg:x="29" fg:w="1"/><text x="38.9167%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="38.6667%" y="405" width="1.3333%" height="15" fill="rgb(232,229,15)" fg:x="29" fg:w="1"/><text x="38.9167%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 1.33%)</title><rect x="38.6667%" y="389" width="1.3333%" height="15" fill="rgb(254,30,23)" fg:x="29" fg:w="1"/><text x="38.9167%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 1.33%)</title><rect x="38.6667%" y="373" width="1.3333%" height="15" fill="rgb(235,160,14)" fg:x="29" fg:w="1"/><text x="38.9167%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="38.6667%" y="357" width="1.3333%" height="15" fill="rgb(212,155,44)" fg:x="29" fg:w="1"/><text x="38.9167%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 1.33%)</title><rect x="38.6667%" y="341" width="1.3333%" height="15" fill="rgb(226,2,50)" fg:x="29" fg:w="1"/><text x="38.9167%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 1.33%)</title><rect x="38.6667%" y="325" width="1.3333%" height="15" fill="rgb(234,177,6)" fg:x="29" fg:w="1"/><text x="38.9167%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 1.33%)</title><rect x="38.6667%" y="309" width="1.3333%" height="15" fill="rgb(217,24,9)" fg:x="29" fg:w="1"/><text x="38.9167%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 1.33%)</title><rect x="38.6667%" y="293" width="1.3333%" height="15" fill="rgb(220,13,46)" fg:x="29" fg:w="1"/><text x="38.9167%" y="303.50"></text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir::{{closure}} (1 samples, 1.33%)</title><rect x="38.6667%" y="277" width="1.3333%" height="15" fill="rgb(239,221,27)" fg:x="29" fg:w="1"/><text x="38.9167%" y="287.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (1 samples, 1.33%)</title><rect x="38.6667%" y="261" width="1.3333%" height="15" fill="rgb(222,198,25)" fg:x="29" fg:w="1"/><text x="38.9167%" y="271.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 1.33%)</title><rect x="38.6667%" y="245" width="1.3333%" height="15" fill="rgb(211,99,13)" fg:x="29" fg:w="1"/><text x="38.9167%" y="255.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 1.33%)</title><rect x="38.6667%" y="229" width="1.3333%" height="15" fill="rgb(232,111,31)" fg:x="29" fg:w="1"/><text x="38.9167%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (1 samples, 1.33%)</title><rect x="38.6667%" y="213" width="1.3333%" height="15" fill="rgb(245,82,37)" fg:x="29" fg:w="1"/><text x="38.9167%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 1.33%)</title><rect x="38.6667%" y="197" width="1.3333%" height="15" fill="rgb(227,149,46)" fg:x="29" fg:w="1"/><text x="38.9167%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 1.33%)</title><rect x="38.6667%" y="181" width="1.3333%" height="15" fill="rgb(218,36,50)" fg:x="29" fg:w="1"/><text x="38.9167%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 1.33%)</title><rect x="38.6667%" y="165" width="1.3333%" height="15" fill="rgb(226,80,48)" fg:x="29" fg:w="1"/><text x="38.9167%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 1.33%)</title><rect x="38.6667%" y="149" width="1.3333%" height="15" fill="rgb(238,224,15)" fg:x="29" fg:w="1"/><text x="38.9167%" y="159.50"></text></g><g><title>advent_of_code_2022::day_07::walk_dir_sizes::{{closure}} (1 samples, 1.33%)</title><rect x="40.0000%" y="469" width="1.3333%" height="15" fill="rgb(241,136,10)" fg:x="30" fg:w="1"/><text x="40.2500%" y="479.50"></text></g><g><title>vfs::path::VfsPath::is_dir (1 samples, 1.33%)</title><rect x="40.0000%" y="453" width="1.3333%" height="15" fill="rgb(208,32,45)" fg:x="30" fg:w="1"/><text x="40.2500%" y="463.50"></text></g><g><title>vfs::path::VfsPath::metadata (1 samples, 1.33%)</title><rect x="40.0000%" y="437" width="1.3333%" height="15" fill="rgb(207,135,9)" fg:x="30" fg:w="1"/><text x="40.2500%" y="447.50"></text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::metadata (1 samples, 1.33%)</title><rect x="40.0000%" y="421" width="1.3333%" height="15" fill="rgb(206,86,44)" fg:x="30" fg:w="1"/><text x="40.2500%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 1.33%)</title><rect x="40.0000%" y="405" width="1.3333%" height="15" fill="rgb(245,177,15)" fg:x="30" fg:w="1"/><text x="40.2500%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 1.33%)</title><rect x="40.0000%" y="389" width="1.3333%" height="15" fill="rgb(206,64,50)" fg:x="30" fg:w="1"/><text x="40.2500%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 1.33%)</title><rect x="40.0000%" y="373" width="1.3333%" height="15" fill="rgb(234,36,40)" fg:x="30" fg:w="1"/><text x="40.2500%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 1.33%)</title><rect x="40.0000%" y="357" width="1.3333%" height="15" fill="rgb(213,64,8)" fg:x="30" fg:w="1"/><text x="40.2500%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 1.33%)</title><rect x="40.0000%" y="341" width="1.3333%" height="15" fill="rgb(210,75,36)" fg:x="30" fg:w="1"/><text x="40.2500%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 1.33%)</title><rect x="40.0000%" y="325" width="1.3333%" height="15" fill="rgb(229,88,21)" fg:x="30" fg:w="1"/><text x="40.2500%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 1.33%)</title><rect x="40.0000%" y="309" width="1.3333%" height="15" fill="rgb(252,204,47)" fg:x="30" fg:w="1"/><text x="40.2500%" y="319.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 1.33%)</title><rect x="40.0000%" y="293" width="1.3333%" height="15" fill="rgb(208,77,27)" fg:x="30" fg:w="1"/><text x="40.2500%" y="303.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 1.33%)</title><rect x="40.0000%" y="277" width="1.3333%" height="15" fill="rgb(221,76,26)" fg:x="30" fg:w="1"/><text x="40.2500%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 1.33%)</title><rect x="40.0000%" y="261" width="1.3333%" height="15" fill="rgb(225,139,18)" fg:x="30" fg:w="1"/><text x="40.2500%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 1.33%)</title><rect x="40.0000%" y="245" width="1.3333%" height="15" fill="rgb(230,137,11)" fg:x="30" fg:w="1"/><text x="40.2500%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 1.33%)</title><rect x="40.0000%" y="229" width="1.3333%" height="15" fill="rgb(212,28,1)" fg:x="30" fg:w="1"/><text x="40.2500%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 1.33%)</title><rect x="40.0000%" y="213" width="1.3333%" height="15" fill="rgb(248,164,17)" fg:x="30" fg:w="1"/><text x="40.2500%" y="223.50"></text></g><g><title>&lt;advent_of_code_2022::day_07::day7_part1::RunnerStruct as aoc_runner::Runner&gt;::run (4 samples, 5.33%)</title><rect x="37.3333%" y="645" width="5.3333%" height="15" fill="rgb(222,171,42)" fg:x="28" fg:w="4"/><text x="37.5833%" y="655.50">&lt;advent..</text></g><g><title>advent_of_code_2022::day_07::part1 (4 samples, 5.33%)</title><rect x="37.3333%" y="629" width="5.3333%" height="15" fill="rgb(243,84,45)" fg:x="28" fg:w="4"/><text x="37.5833%" y="639.50">advent_..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (4 samples, 5.33%)</title><rect x="37.3333%" y="613" width="5.3333%" height="15" fill="rgb(252,49,23)" fg:x="28" fg:w="4"/><text x="37.5833%" y="623.50">core::i..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 5.33%)</title><rect x="37.3333%" y="597" width="5.3333%" height="15" fill="rgb(215,19,7)" fg:x="28" fg:w="4"/><text x="37.5833%" y="607.50">&lt;usize ..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 5.33%)</title><rect x="37.3333%" y="581" width="5.3333%" height="15" fill="rgb(238,81,41)" fg:x="28" fg:w="4"/><text x="37.5833%" y="591.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 5.33%)</title><rect x="37.3333%" y="565" width="5.3333%" height="15" fill="rgb(210,199,37)" fg:x="28" fg:w="4"/><text x="37.5833%" y="575.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 5.33%)</title><rect x="37.3333%" y="549" width="5.3333%" height="15" fill="rgb(244,192,49)" fg:x="28" fg:w="4"/><text x="37.5833%" y="559.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 5.33%)</title><rect x="37.3333%" y="533" width="5.3333%" height="15" fill="rgb(226,211,11)" fg:x="28" fg:w="4"/><text x="37.5833%" y="543.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 5.33%)</title><rect x="37.3333%" y="517" width="5.3333%" height="15" fill="rgb(236,162,54)" fg:x="28" fg:w="4"/><text x="37.5833%" y="527.50">core::i..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (2 samples, 2.67%)</title><rect x="40.0000%" y="501" width="2.6667%" height="15" fill="rgb(220,229,9)" fg:x="30" fg:w="2"/><text x="40.2500%" y="511.50">co..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (2 samples, 2.67%)</title><rect x="40.0000%" y="485" width="2.6667%" height="15" fill="rgb(250,87,22)" fg:x="30" fg:w="2"/><text x="40.2500%" y="495.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 1.33%)</title><rect x="41.3333%" y="469" width="1.3333%" height="15" fill="rgb(239,43,17)" fg:x="31" fg:w="1"/><text x="41.5833%" y="479.50"></text></g><g><title>advent_of_code_2022::day_07::walk_dir_sizes::{{closure}} (1 samples, 1.33%)</title><rect x="41.3333%" y="453" width="1.3333%" height="15" fill="rgb(231,177,25)" fg:x="31" fg:w="1"/><text x="41.5833%" y="463.50"></text></g><g><title>advent_of_code_2022::day_07::get_path_size (1 samples, 1.33%)</title><rect x="41.3333%" y="437" width="1.3333%" height="15" fill="rgb(219,179,1)" fg:x="31" fg:w="1"/><text x="41.5833%" y="447.50"></text></g><g><title>vfs::path::VfsPath::join (1 samples, 1.33%)</title><rect x="41.3333%" y="421" width="1.3333%" height="15" fill="rgb(238,219,53)" fg:x="31" fg:w="1"/><text x="41.5833%" y="431.50"></text></g><g><title>vfs::path::VfsPath::join_internal (1 samples, 1.33%)</title><rect x="41.3333%" y="405" width="1.3333%" height="15" fill="rgb(232,167,36)" fg:x="31" fg:w="1"/><text x="41.5833%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;str&gt;&gt; (1 samples, 1.33%)</title><rect x="41.3333%" y="389" width="1.3333%" height="15" fill="rgb(244,19,51)" fg:x="31" fg:w="1"/><text x="41.5833%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.33%)</title><rect x="41.3333%" y="373" width="1.3333%" height="15" fill="rgb(224,6,22)" fg:x="31" fg:w="1"/><text x="41.5833%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;str,alloc::alloc::Global&gt;&gt; (1 samples, 1.33%)</title><rect x="41.3333%" y="357" width="1.3333%" height="15" fill="rgb(224,145,5)" fg:x="31" fg:w="1"/><text x="41.5833%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.33%)</title><rect x="41.3333%" y="341" width="1.3333%" height="15" fill="rgb(234,130,49)" fg:x="31" fg:w="1"/><text x="41.5833%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (1 samples, 1.33%)</title><rect x="41.3333%" y="325" width="1.3333%" height="15" fill="rgb(254,6,2)" fg:x="31" fg:w="1"/><text x="41.5833%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.33%)</title><rect x="41.3333%" y="309" width="1.3333%" height="15" fill="rgb(208,96,46)" fg:x="31" fg:w="1"/><text x="41.5833%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 1.33%)</title><rect x="41.3333%" y="293" width="1.3333%" height="15" fill="rgb(239,3,39)" fg:x="31" fg:w="1"/><text x="41.5833%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 1.33%)</title><rect x="41.3333%" y="277" width="1.3333%" height="15" fill="rgb(233,210,1)" fg:x="31" fg:w="1"/><text x="41.5833%" y="287.50"></text></g><g><title>__rust_dealloc (1 samples, 1.33%)</title><rect x="41.3333%" y="261" width="1.3333%" height="15" fill="rgb(244,137,37)" fg:x="31" fg:w="1"/><text x="41.5833%" y="271.50"></text></g><g><title>&lt;vfs::path::WalkDirIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="42.6667%" y="485" width="1.3333%" height="15" fill="rgb(240,136,2)" fg:x="32" fg:w="1"/><text x="42.9167%" y="495.50"></text></g><g><title>vfs::path::VfsPath::read_dir (1 samples, 1.33%)</title><rect x="42.6667%" y="469" width="1.3333%" height="15" fill="rgb(239,18,37)" fg:x="32" fg:w="1"/><text x="42.9167%" y="479.50"></text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::read_dir (1 samples, 1.33%)</title><rect x="42.6667%" y="453" width="1.3333%" height="15" fill="rgb(218,185,22)" fg:x="32" fg:w="1"/><text x="42.9167%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.33%)</title><rect x="42.6667%" y="437" width="1.3333%" height="15" fill="rgb(225,218,4)" fg:x="32" fg:w="1"/><text x="42.9167%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="42.6667%" y="421" width="1.3333%" height="15" fill="rgb(230,182,32)" fg:x="32" fg:w="1"/><text x="42.9167%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="42.6667%" y="405" width="1.3333%" height="15" fill="rgb(242,56,43)" fg:x="32" fg:w="1"/><text x="42.9167%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="42.6667%" y="389" width="1.3333%" height="15" fill="rgb(233,99,24)" fg:x="32" fg:w="1"/><text x="42.9167%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="42.6667%" y="373" width="1.3333%" height="15" fill="rgb(234,209,42)" fg:x="32" fg:w="1"/><text x="42.9167%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 1.33%)</title><rect x="42.6667%" y="357" width="1.3333%" height="15" fill="rgb(227,7,12)" fg:x="32" fg:w="1"/><text x="42.9167%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 1.33%)</title><rect x="42.6667%" y="341" width="1.3333%" height="15" fill="rgb(245,203,43)" fg:x="32" fg:w="1"/><text x="42.9167%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 1.33%)</title><rect x="42.6667%" y="325" width="1.3333%" height="15" fill="rgb(238,205,33)" fg:x="32" fg:w="1"/><text x="42.9167%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 1.33%)</title><rect x="42.6667%" y="309" width="1.3333%" height="15" fill="rgb(231,56,7)" fg:x="32" fg:w="1"/><text x="42.9167%" y="319.50"></text></g><g><title>advent_of_code_2022::day_07::walk_dir_sizes::{{closure}} (1 samples, 1.33%)</title><rect x="44.0000%" y="453" width="1.3333%" height="15" fill="rgb(244,186,29)" fg:x="33" fg:w="1"/><text x="44.2500%" y="463.50"></text></g><g><title>vfs::path::VfsPath::is_dir (1 samples, 1.33%)</title><rect x="44.0000%" y="437" width="1.3333%" height="15" fill="rgb(234,111,31)" fg:x="33" fg:w="1"/><text x="44.2500%" y="447.50"></text></g><g><title>vfs::path::VfsPath::metadata (1 samples, 1.33%)</title><rect x="44.0000%" y="421" width="1.3333%" height="15" fill="rgb(241,149,10)" fg:x="33" fg:w="1"/><text x="44.2500%" y="431.50"></text></g><g><title>&lt;vfs::impls::memory::MemoryFS as vfs::filesystem::FileSystem&gt;::metadata (1 samples, 1.33%)</title><rect x="44.0000%" y="405" width="1.3333%" height="15" fill="rgb(249,206,44)" fg:x="33" fg:w="1"/><text x="44.2500%" y="415.50"></text></g><g><title>&lt;advent_of_code_2022::day_07::day7_part2::RunnerStruct as aoc_runner::Runner&gt;::run (3 samples, 4.00%)</title><rect x="42.6667%" y="645" width="4.0000%" height="15" fill="rgb(251,153,30)" fg:x="32" fg:w="3"/><text x="42.9167%" y="655.50">&lt;adv..</text></g><g><title>advent_of_code_2022::day_07::part2 (3 samples, 4.00%)</title><rect x="42.6667%" y="629" width="4.0000%" height="15" fill="rgb(239,152,38)" fg:x="32" fg:w="3"/><text x="42.9167%" y="639.50">adve..</text></g><g><title>core::iter::traits::iterator::Iterator::min (3 samples, 4.00%)</title><rect x="42.6667%" y="613" width="4.0000%" height="15" fill="rgb(249,139,47)" fg:x="32" fg:w="3"/><text x="42.9167%" y="623.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (3 samples, 4.00%)</title><rect x="42.6667%" y="597" width="4.0000%" height="15" fill="rgb(244,64,35)" fg:x="32" fg:w="3"/><text x="42.9167%" y="607.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (3 samples, 4.00%)</title><rect x="42.6667%" y="581" width="4.0000%" height="15" fill="rgb(216,46,15)" fg:x="32" fg:w="3"/><text x="42.9167%" y="591.50">core..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 4.00%)</title><rect x="42.6667%" y="565" width="4.0000%" height="15" fill="rgb(250,74,19)" fg:x="32" fg:w="3"/><text x="42.9167%" y="575.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 4.00%)</title><rect x="42.6667%" y="549" width="4.0000%" height="15" fill="rgb(249,42,33)" fg:x="32" fg:w="3"/><text x="42.9167%" y="559.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 4.00%)</title><rect x="42.6667%" y="533" width="4.0000%" height="15" fill="rgb(242,149,17)" fg:x="32" fg:w="3"/><text x="42.9167%" y="543.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 4.00%)</title><rect x="42.6667%" y="517" width="4.0000%" height="15" fill="rgb(244,29,21)" fg:x="32" fg:w="3"/><text x="42.9167%" y="527.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 4.00%)</title><rect x="42.6667%" y="501" width="4.0000%" height="15" fill="rgb(220,130,37)" fg:x="32" fg:w="3"/><text x="42.9167%" y="511.50">core..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (2 samples, 2.67%)</title><rect x="44.0000%" y="485" width="2.6667%" height="15" fill="rgb(211,67,2)" fg:x="33" fg:w="2"/><text x="44.2500%" y="495.50">co..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (2 samples, 2.67%)</title><rect x="44.0000%" y="469" width="2.6667%" height="15" fill="rgb(235,68,52)" fg:x="33" fg:w="2"/><text x="44.2500%" y="479.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 1.33%)</title><rect x="45.3333%" y="453" width="1.3333%" height="15" fill="rgb(246,142,3)" fg:x="34" fg:w="1"/><text x="45.5833%" y="463.50"></text></g><g><title>advent_of_code_2022::day_07::walk_dir_sizes::{{closure}} (1 samples, 1.33%)</title><rect x="45.3333%" y="437" width="1.3333%" height="15" fill="rgb(241,25,7)" fg:x="34" fg:w="1"/><text x="45.5833%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;vfs::path::VfsPath&gt; (1 samples, 1.33%)</title><rect x="45.3333%" y="421" width="1.3333%" height="15" fill="rgb(242,119,39)" fg:x="34" fg:w="1"/><text x="45.5833%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 1.33%)</title><rect x="45.3333%" y="405" width="1.3333%" height="15" fill="rgb(241,98,45)" fg:x="34" fg:w="1"/><text x="45.5833%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 1.33%)</title><rect x="45.3333%" y="389" width="1.3333%" height="15" fill="rgb(254,28,30)" fg:x="34" fg:w="1"/><text x="45.5833%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 1.33%)</title><rect x="45.3333%" y="373" width="1.3333%" height="15" fill="rgb(241,142,54)" fg:x="34" fg:w="1"/><text x="45.5833%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.33%)</title><rect x="45.3333%" y="357" width="1.3333%" height="15" fill="rgb(222,85,15)" fg:x="34" fg:w="1"/><text x="45.5833%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 1.33%)</title><rect x="45.3333%" y="341" width="1.3333%" height="15" fill="rgb(210,85,47)" fg:x="34" fg:w="1"/><text x="45.5833%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 1.33%)</title><rect x="45.3333%" y="325" width="1.3333%" height="15" fill="rgb(224,206,25)" fg:x="34" fg:w="1"/><text x="45.5833%" y="335.50"></text></g><g><title>cfree (1 samples, 1.33%)</title><rect x="45.3333%" y="309" width="1.3333%" height="15" fill="rgb(243,201,19)" fg:x="34" fg:w="1"/><text x="45.5833%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 1.33%)</title><rect x="45.3333%" y="293" width="1.3333%" height="15" fill="rgb(236,59,4)" fg:x="34" fg:w="1"/><text x="45.5833%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="46.6667%" y="325" width="1.3333%" height="15" fill="rgb(254,179,45)" fg:x="35" fg:w="1"/><text x="46.9167%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="46.6667%" y="309" width="1.3333%" height="15" fill="rgb(226,14,10)" fg:x="35" fg:w="1"/><text x="46.9167%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 1.33%)</title><rect x="46.6667%" y="293" width="1.3333%" height="15" fill="rgb(244,27,41)" fg:x="35" fg:w="1"/><text x="46.9167%" y="303.50"></text></g><g><title>&lt;advent_of_code_2022::day_08::day8_part2::RunnerStruct as aoc_runner::Runner&gt;::run (3 samples, 4.00%)</title><rect x="46.6667%" y="645" width="4.0000%" height="15" fill="rgb(235,35,32)" fg:x="35" fg:w="3"/><text x="46.9167%" y="655.50">&lt;adv..</text></g><g><title>advent_of_code_2022::day_08::part2 (3 samples, 4.00%)</title><rect x="46.6667%" y="629" width="4.0000%" height="15" fill="rgb(218,68,31)" fg:x="35" fg:w="3"/><text x="46.9167%" y="639.50">adve..</text></g><g><title>core::iter::traits::iterator::Iterator::max (3 samples, 4.00%)</title><rect x="46.6667%" y="613" width="4.0000%" height="15" fill="rgb(207,120,37)" fg:x="35" fg:w="3"/><text x="46.9167%" y="623.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::max_by (3 samples, 4.00%)</title><rect x="46.6667%" y="597" width="4.0000%" height="15" fill="rgb(227,98,0)" fg:x="35" fg:w="3"/><text x="46.9167%" y="607.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (3 samples, 4.00%)</title><rect x="46.6667%" y="581" width="4.0000%" height="15" fill="rgb(207,7,3)" fg:x="35" fg:w="3"/><text x="46.9167%" y="591.50">core..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 4.00%)</title><rect x="46.6667%" y="565" width="4.0000%" height="15" fill="rgb(206,98,19)" fg:x="35" fg:w="3"/><text x="46.9167%" y="575.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 4.00%)</title><rect x="46.6667%" y="549" width="4.0000%" height="15" fill="rgb(217,5,26)" fg:x="35" fg:w="3"/><text x="46.9167%" y="559.50">&lt;cor..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (3 samples, 4.00%)</title><rect x="46.6667%" y="533" width="4.0000%" height="15" fill="rgb(235,190,38)" fg:x="35" fg:w="3"/><text x="46.9167%" y="543.50">core..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 4.00%)</title><rect x="46.6667%" y="517" width="4.0000%" height="15" fill="rgb(247,86,24)" fg:x="35" fg:w="3"/><text x="46.9167%" y="527.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 4.00%)</title><rect x="46.6667%" y="501" width="4.0000%" height="15" fill="rgb(205,101,16)" fg:x="35" fg:w="3"/><text x="46.9167%" y="511.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 4.00%)</title><rect x="46.6667%" y="485" width="4.0000%" height="15" fill="rgb(246,168,33)" fg:x="35" fg:w="3"/><text x="46.9167%" y="495.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 4.00%)</title><rect x="46.6667%" y="469" width="4.0000%" height="15" fill="rgb(231,114,1)" fg:x="35" fg:w="3"/><text x="46.9167%" y="479.50">core..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (3 samples, 4.00%)</title><rect x="46.6667%" y="453" width="4.0000%" height="15" fill="rgb(207,184,53)" fg:x="35" fg:w="3"/><text x="46.9167%" y="463.50">core..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (3 samples, 4.00%)</title><rect x="46.6667%" y="437" width="4.0000%" height="15" fill="rgb(224,95,51)" fg:x="35" fg:w="3"/><text x="46.9167%" y="447.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 4.00%)</title><rect x="46.6667%" y="421" width="4.0000%" height="15" fill="rgb(212,188,45)" fg:x="35" fg:w="3"/><text x="46.9167%" y="431.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 4.00%)</title><rect x="46.6667%" y="405" width="4.0000%" height="15" fill="rgb(223,154,38)" fg:x="35" fg:w="3"/><text x="46.9167%" y="415.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 4.00%)</title><rect x="46.6667%" y="389" width="4.0000%" height="15" fill="rgb(251,22,52)" fg:x="35" fg:w="3"/><text x="46.9167%" y="399.50">core..</text></g><g><title>advent_of_code_2022::day_08::part2::{{closure}}::{{closure}} (3 samples, 4.00%)</title><rect x="46.6667%" y="373" width="4.0000%" height="15" fill="rgb(229,209,22)" fg:x="35" fg:w="3"/><text x="46.9167%" y="383.50">adve..</text></g><g><title>advent_of_code_2022::day_08::scenic_score (3 samples, 4.00%)</title><rect x="46.6667%" y="357" width="4.0000%" height="15" fill="rgb(234,138,34)" fg:x="35" fg:w="3"/><text x="46.9167%" y="367.50">adve..</text></g><g><title>advent_of_code_2022::day_08::count_visible_trees_from_pos (3 samples, 4.00%)</title><rect x="46.6667%" y="341" width="4.0000%" height="15" fill="rgb(212,95,11)" fg:x="35" fg:w="3"/><text x="46.9167%" y="351.50">adve..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.67%)</title><rect x="48.0000%" y="325" width="2.6667%" height="15" fill="rgb(240,179,47)" fg:x="36" fg:w="2"/><text x="48.2500%" y="335.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::nth (1 samples, 1.33%)</title><rect x="49.3333%" y="309" width="1.3333%" height="15" fill="rgb(240,163,11)" fg:x="37" fg:w="1"/><text x="49.5833%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (1 samples, 1.33%)</title><rect x="49.3333%" y="293" width="1.3333%" height="15" fill="rgb(236,37,12)" fg:x="37" fg:w="1"/><text x="49.5833%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 1.33%)</title><rect x="49.3333%" y="277" width="1.3333%" height="15" fill="rgb(232,164,16)" fg:x="37" fg:w="1"/><text x="49.5833%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 1.33%)</title><rect x="49.3333%" y="261" width="1.3333%" height="15" fill="rgb(244,205,15)" fg:x="37" fg:w="1"/><text x="49.5833%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (1 samples, 1.33%)</title><rect x="50.6667%" y="581" width="1.3333%" height="15" fill="rgb(223,117,47)" fg:x="38" fg:w="1"/><text x="50.9167%" y="591.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 1.33%)</title><rect x="50.6667%" y="565" width="1.3333%" height="15" fill="rgb(244,107,35)" fg:x="38" fg:w="1"/><text x="50.9167%" y="575.50"></text></g><g><title>alloc::slice::merge (1 samples, 1.33%)</title><rect x="50.6667%" y="549" width="1.3333%" height="15" fill="rgb(205,140,8)" fg:x="38" fg:w="1"/><text x="50.9167%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 1.33%)</title><rect x="50.6667%" y="533" width="1.3333%" height="15" fill="rgb(228,84,46)" fg:x="38" fg:w="1"/><text x="50.9167%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 1.33%)</title><rect x="50.6667%" y="517" width="1.3333%" height="15" fill="rgb(254,188,9)" fg:x="38" fg:w="1"/><text x="50.9167%" y="527.50"></text></g><g><title>&lt;advent_of_code_2022::day_09::day9_part1::RunnerStruct as aoc_runner::Runner&gt;::run (2 samples, 2.67%)</title><rect x="50.6667%" y="645" width="2.6667%" height="15" fill="rgb(206,112,54)" fg:x="38" fg:w="2"/><text x="50.9167%" y="655.50">&lt;a..</text></g><g><title>advent_of_code_2022::day_09::part1 (2 samples, 2.67%)</title><rect x="50.6667%" y="629" width="2.6667%" height="15" fill="rgb(216,84,49)" fg:x="38" fg:w="2"/><text x="50.9167%" y="639.50">ad..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 2.67%)</title><rect x="50.6667%" y="613" width="2.6667%" height="15" fill="rgb(214,194,35)" fg:x="38" fg:w="2"/><text x="50.9167%" y="623.50">co..</text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 2.67%)</title><rect x="50.6667%" y="597" width="2.6667%" height="15" fill="rgb(249,28,3)" fg:x="38" fg:w="2"/><text x="50.9167%" y="607.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.33%)</title><rect x="52.0000%" y="581" width="1.3333%" height="15" fill="rgb(222,56,52)" fg:x="39" fg:w="1"/><text x="52.2500%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="52.0000%" y="565" width="1.3333%" height="15" fill="rgb(245,217,50)" fg:x="39" fg:w="1"/><text x="52.2500%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="52.0000%" y="549" width="1.3333%" height="15" fill="rgb(213,201,24)" fg:x="39" fg:w="1"/><text x="52.2500%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="52.0000%" y="533" width="1.3333%" height="15" fill="rgb(248,116,28)" fg:x="39" fg:w="1"/><text x="52.2500%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 1.33%)</title><rect x="52.0000%" y="517" width="1.3333%" height="15" fill="rgb(219,72,43)" fg:x="39" fg:w="1"/><text x="52.2500%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 1.33%)</title><rect x="52.0000%" y="501" width="1.3333%" height="15" fill="rgb(209,138,14)" fg:x="39" fg:w="1"/><text x="52.2500%" y="511.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::from_sorted_iter (1 samples, 1.33%)</title><rect x="53.3333%" y="581" width="1.3333%" height="15" fill="rgb(222,18,33)" fg:x="40" fg:w="1"/><text x="53.5833%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (1 samples, 1.33%)</title><rect x="53.3333%" y="565" width="1.3333%" height="15" fill="rgb(213,199,7)" fg:x="40" fg:w="1"/><text x="53.5833%" y="575.50"></text></g><g><title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (1 samples, 1.33%)</title><rect x="53.3333%" y="549" width="1.3333%" height="15" fill="rgb(250,110,10)" fg:x="40" fg:w="1"/><text x="53.5833%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::dedup_sorted_iter::DedupSortedIter&lt;K,V,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.33%)</title><rect x="53.3333%" y="533" width="1.3333%" height="15" fill="rgb(248,123,6)" fg:x="40" fg:w="1"/><text x="53.5833%" y="543.50"></text></g><g><title>&lt;advent_of_code_2022::day_09::day9_part2::RunnerStruct as aoc_runner::Runner&gt;::run (4 samples, 5.33%)</title><rect x="53.3333%" y="645" width="5.3333%" height="15" fill="rgb(206,91,31)" fg:x="40" fg:w="4"/><text x="53.5833%" y="655.50">&lt;advent..</text></g><g><title>advent_of_code_2022::day_09::part2 (4 samples, 5.33%)</title><rect x="53.3333%" y="629" width="5.3333%" height="15" fill="rgb(211,154,13)" fg:x="40" fg:w="4"/><text x="53.5833%" y="639.50">advent_..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 5.33%)</title><rect x="53.3333%" y="613" width="5.3333%" height="15" fill="rgb(225,148,7)" fg:x="40" fg:w="4"/><text x="53.5833%" y="623.50">core::i..</text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 5.33%)</title><rect x="53.3333%" y="597" width="5.3333%" height="15" fill="rgb(220,160,43)" fg:x="40" fg:w="4"/><text x="53.5833%" y="607.50">&lt;alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 4.00%)</title><rect x="54.6667%" y="581" width="4.0000%" height="15" fill="rgb(213,52,39)" fg:x="41" fg:w="3"/><text x="54.9167%" y="591.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="54.6667%" y="565" width="4.0000%" height="15" fill="rgb(243,137,7)" fg:x="41" fg:w="3"/><text x="54.9167%" y="575.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="54.6667%" y="549" width="4.0000%" height="15" fill="rgb(230,79,13)" fg:x="41" fg:w="3"/><text x="54.9167%" y="559.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 4.00%)</title><rect x="54.6667%" y="533" width="4.0000%" height="15" fill="rgb(247,105,23)" fg:x="41" fg:w="3"/><text x="54.9167%" y="543.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 4.00%)</title><rect x="54.6667%" y="517" width="4.0000%" height="15" fill="rgb(223,179,41)" fg:x="41" fg:w="3"/><text x="54.9167%" y="527.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 4.00%)</title><rect x="54.6667%" y="501" width="4.0000%" height="15" fill="rgb(218,9,34)" fg:x="41" fg:w="3"/><text x="54.9167%" y="511.50">allo..</text></g><g><title>&lt;advent_of_code_2022::day_09::Simulation&lt;N&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 4.00%)</title><rect x="54.6667%" y="485" width="4.0000%" height="15" fill="rgb(222,106,8)" fg:x="41" fg:w="3"/><text x="54.9167%" y="495.50">&lt;adv..</text></g><g><title>advent_of_code_2022::day_09::Rope&lt;N&gt;::move_one_step (3 samples, 4.00%)</title><rect x="54.6667%" y="469" width="4.0000%" height="15" fill="rgb(211,220,0)" fg:x="41" fg:w="3"/><text x="54.9167%" y="479.50">adve..</text></g><g><title>advent_of_code_2022::day_09::RopeLink::move_tail (1 samples, 1.33%)</title><rect x="57.3333%" y="453" width="1.3333%" height="15" fill="rgb(229,52,16)" fg:x="43" fg:w="1"/><text x="57.5833%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 2.67%)</title><rect x="64.0000%" y="373" width="2.6667%" height="15" fill="rgb(212,155,18)" fg:x="48" fg:w="2"/><text x="64.2500%" y="383.50">&lt;c..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 2.67%)</title><rect x="64.0000%" y="357" width="2.6667%" height="15" fill="rgb(242,21,14)" fg:x="48" fg:w="2"/><text x="64.2500%" y="367.50">co..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 2.67%)</title><rect x="64.0000%" y="341" width="2.6667%" height="15" fill="rgb(222,19,48)" fg:x="48" fg:w="2"/><text x="64.2500%" y="351.50">co..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 2.67%)</title><rect x="64.0000%" y="325" width="2.6667%" height="15" fill="rgb(232,45,27)" fg:x="48" fg:w="2"/><text x="64.2500%" y="335.50">co..</text></g><g><title>&lt;advent_of_code_2022::day_11::Monkey as core::clone::Clone&gt;::clone (7 samples, 9.33%)</title><rect x="61.3333%" y="581" width="9.3333%" height="15" fill="rgb(249,103,42)" fg:x="46" fg:w="7"/><text x="61.5833%" y="591.50">&lt;advent_of_co..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 8.00%)</title><rect x="62.6667%" y="565" width="8.0000%" height="15" fill="rgb(246,81,33)" fg:x="47" fg:w="6"/><text x="62.9167%" y="575.50">&lt;alloc::col..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 8.00%)</title><rect x="62.6667%" y="549" width="8.0000%" height="15" fill="rgb(252,33,42)" fg:x="47" fg:w="6"/><text x="62.9167%" y="559.50">&lt;alloc::col..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 8.00%)</title><rect x="62.6667%" y="533" width="8.0000%" height="15" fill="rgb(209,212,41)" fg:x="47" fg:w="6"/><text x="62.9167%" y="543.50">&lt;alloc::col..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter (6 samples, 8.00%)</title><rect x="62.6667%" y="517" width="8.0000%" height="15" fill="rgb(207,154,6)" fg:x="47" fg:w="6"/><text x="62.9167%" y="527.50">alloc::coll..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 8.00%)</title><rect x="62.6667%" y="501" width="8.0000%" height="15" fill="rgb(223,64,47)" fg:x="47" fg:w="6"/><text x="62.9167%" y="511.50">core::iter:..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 8.00%)</title><rect x="62.6667%" y="485" width="8.0000%" height="15" fill="rgb(211,161,38)" fg:x="47" fg:w="6"/><text x="62.9167%" y="495.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 8.00%)</title><rect x="62.6667%" y="469" width="8.0000%" height="15" fill="rgb(219,138,40)" fg:x="47" fg:w="6"/><text x="62.9167%" y="479.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 8.00%)</title><rect x="62.6667%" y="453" width="8.0000%" height="15" fill="rgb(241,228,46)" fg:x="47" fg:w="6"/><text x="62.9167%" y="463.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 8.00%)</title><rect x="62.6667%" y="437" width="8.0000%" height="15" fill="rgb(223,209,38)" fg:x="47" fg:w="6"/><text x="62.9167%" y="447.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 8.00%)</title><rect x="62.6667%" y="421" width="8.0000%" height="15" fill="rgb(236,164,45)" fg:x="47" fg:w="6"/><text x="62.9167%" y="431.50">&lt;core::iter..</text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 8.00%)</title><rect x="62.6667%" y="405" width="8.0000%" height="15" fill="rgb(231,15,5)" fg:x="47" fg:w="6"/><text x="62.9167%" y="415.50">&lt;alloc::col..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 6.67%)</title><rect x="64.0000%" y="389" width="6.6667%" height="15" fill="rgb(252,35,15)" fg:x="48" fg:w="5"/><text x="64.2500%" y="399.50">core::ite..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 4.00%)</title><rect x="66.6667%" y="373" width="4.0000%" height="15" fill="rgb(248,181,18)" fg:x="50" fg:w="3"/><text x="66.9167%" y="383.50">core..</text></g><g><title>core::iter::adapters::cloned::clone_try_fold::{{closure}} (3 samples, 4.00%)</title><rect x="66.6667%" y="357" width="4.0000%" height="15" fill="rgb(233,39,42)" fg:x="50" fg:w="3"/><text x="66.9167%" y="367.50">core..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (3 samples, 4.00%)</title><rect x="66.6667%" y="341" width="4.0000%" height="15" fill="rgb(238,110,33)" fg:x="50" fg:w="3"/><text x="66.9167%" y="351.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (3 samples, 4.00%)</title><rect x="66.6667%" y="325" width="4.0000%" height="15" fill="rgb(233,195,10)" fg:x="50" fg:w="3"/><text x="66.9167%" y="335.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 4.00%)</title><rect x="66.6667%" y="309" width="4.0000%" height="15" fill="rgb(254,105,3)" fg:x="50" fg:w="3"/><text x="66.9167%" y="319.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 2.67%)</title><rect x="68.0000%" y="293" width="2.6667%" height="15" fill="rgb(221,225,9)" fg:x="51" fg:w="2"/><text x="68.2500%" y="303.50">co..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter::{{closure}} (2 samples, 2.67%)</title><rect x="68.0000%" y="277" width="2.6667%" height="15" fill="rgb(224,227,45)" fg:x="51" fg:w="2"/><text x="68.2500%" y="287.50">al..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (2 samples, 2.67%)</title><rect x="70.6667%" y="549" width="2.6667%" height="15" fill="rgb(229,198,43)" fg:x="53" fg:w="2"/><text x="70.9167%" y="559.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (2 samples, 2.67%)</title><rect x="70.6667%" y="533" width="2.6667%" height="15" fill="rgb(206,209,35)" fg:x="53" fg:w="2"/><text x="70.9167%" y="543.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (2 samples, 2.67%)</title><rect x="70.6667%" y="517" width="2.6667%" height="15" fill="rgb(245,195,53)" fg:x="53" fg:w="2"/><text x="70.9167%" y="527.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (2 samples, 2.67%)</title><rect x="70.6667%" y="501" width="2.6667%" height="15" fill="rgb(240,92,26)" fg:x="53" fg:w="2"/><text x="70.9167%" y="511.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 2.67%)</title><rect x="70.6667%" y="485" width="2.6667%" height="15" fill="rgb(207,40,23)" fg:x="53" fg:w="2"/><text x="70.9167%" y="495.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 2.67%)</title><rect x="70.6667%" y="469" width="2.6667%" height="15" fill="rgb(223,111,35)" fg:x="53" fg:w="2"/><text x="70.9167%" y="479.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 2.67%)</title><rect x="70.6667%" y="453" width="2.6667%" height="15" fill="rgb(229,147,28)" fg:x="53" fg:w="2"/><text x="70.9167%" y="463.50">al..</text></g><g><title>alloc::alloc::realloc (2 samples, 2.67%)</title><rect x="70.6667%" y="437" width="2.6667%" height="15" fill="rgb(211,29,28)" fg:x="53" fg:w="2"/><text x="70.9167%" y="447.50">al..</text></g><g><title>realloc (2 samples, 2.67%)</title><rect x="70.6667%" y="421" width="2.6667%" height="15" fill="rgb(228,72,33)" fg:x="53" fg:w="2"/><text x="70.9167%" y="431.50">re..</text></g><g><title>[libc.so.6] (1 samples, 1.33%)</title><rect x="72.0000%" y="405" width="1.3333%" height="15" fill="rgb(205,214,31)" fg:x="54" fg:w="1"/><text x="72.2500%" y="415.50"></text></g><g><title>advent_of_code_2022::day_11::Monkey::catch (3 samples, 4.00%)</title><rect x="70.6667%" y="581" width="4.0000%" height="15" fill="rgb(224,111,15)" fg:x="53" fg:w="3"/><text x="70.9167%" y="591.50">adve..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (3 samples, 4.00%)</title><rect x="70.6667%" y="565" width="4.0000%" height="15" fill="rgb(253,21,26)" fg:x="53" fg:w="3"/><text x="70.9167%" y="575.50">allo..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (1 samples, 1.33%)</title><rect x="73.3333%" y="549" width="1.3333%" height="15" fill="rgb(245,139,43)" fg:x="55" fg:w="1"/><text x="73.5833%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (1 samples, 1.33%)</title><rect x="73.3333%" y="533" width="1.3333%" height="15" fill="rgb(252,170,7)" fg:x="55" fg:w="1"/><text x="73.5833%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (1 samples, 1.33%)</title><rect x="81.3333%" y="565" width="1.3333%" height="15" fill="rgb(231,118,14)" fg:x="61" fg:w="1"/><text x="81.5833%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (1 samples, 1.33%)</title><rect x="81.3333%" y="549" width="1.3333%" height="15" fill="rgb(238,83,0)" fg:x="61" fg:w="1"/><text x="81.5833%" y="559.50"></text></g><g><title>core::ptr::read (1 samples, 1.33%)</title><rect x="81.3333%" y="533" width="1.3333%" height="15" fill="rgb(221,39,39)" fg:x="61" fg:w="1"/><text x="81.5833%" y="543.50"></text></g><g><title>advent_of_code_2022::day_11::Monkey::throw (15 samples, 20.00%)</title><rect x="74.6667%" y="581" width="20.0000%" height="15" fill="rgb(222,119,46)" fg:x="56" fg:w="15"/><text x="74.9167%" y="591.50">advent_of_code_2022::day_11::Mo..</text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 12.00%)</title><rect x="82.6667%" y="565" width="12.0000%" height="15" fill="rgb(222,165,49)" fg:x="62" fg:w="9"/><text x="82.9167%" y="575.50">core::option::Opti..</text></g><g><title>advent_of_code_2022::day_11::Monkey::throw::{{closure}} (9 samples, 12.00%)</title><rect x="82.6667%" y="549" width="12.0000%" height="15" fill="rgb(219,113,52)" fg:x="62" fg:w="9"/><text x="82.9167%" y="559.50">advent_of_code_202..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.33%)</title><rect x="94.6667%" y="549" width="1.3333%" height="15" fill="rgb(214,7,15)" fg:x="71" fg:w="1"/><text x="94.9167%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_mut_slices (1 samples, 1.33%)</title><rect x="94.6667%" y="533" width="1.3333%" height="15" fill="rgb(235,32,4)" fg:x="71" fg:w="1"/><text x="94.9167%" y="543.50"></text></g><g><title>aoc_runner::Runner::try_run (48 samples, 64.00%)</title><rect x="34.6667%" y="661" width="64.0000%" height="15" fill="rgb(238,90,54)" fg:x="26" fg:w="48"/><text x="34.9167%" y="671.50">aoc_runner::Runner::try_run</text></g><g><title>&lt;advent_of_code_2022::day_11::day11_part2::RunnerStruct as aoc_runner::Runner&gt;::run (30 samples, 40.00%)</title><rect x="58.6667%" y="645" width="40.0000%" height="15" fill="rgb(213,208,19)" fg:x="44" fg:w="30"/><text x="58.9167%" y="655.50">&lt;advent_of_code_2022::day_11::day11_part2::RunnerStruct as aoc_ru..</text></g><g><title>advent_of_code_2022::day_11::part2 (30 samples, 40.00%)</title><rect x="58.6667%" y="629" width="40.0000%" height="15" fill="rgb(233,156,4)" fg:x="44" fg:w="30"/><text x="58.9167%" y="639.50">advent_of_code_2022::day_11::part2</text></g><g><title>advent_of_code_2022::day_11::Monkeys::play_n_rounds (30 samples, 40.00%)</title><rect x="58.6667%" y="613" width="40.0000%" height="15" fill="rgb(207,194,5)" fg:x="44" fg:w="30"/><text x="58.9167%" y="623.50">advent_of_code_2022::day_11::Monkeys::play_n_rounds</text></g><g><title>advent_of_code_2022::day_11::Monkeys::play_one_round (30 samples, 40.00%)</title><rect x="58.6667%" y="597" width="40.0000%" height="15" fill="rgb(206,111,30)" fg:x="44" fg:w="30"/><text x="58.9167%" y="607.50">advent_of_code_2022::day_11::Monkeys::play_one_round</text></g><g><title>core::ptr::drop_in_place&lt;advent_of_code_2022::day_11::Monkey&gt; (3 samples, 4.00%)</title><rect x="94.6667%" y="581" width="4.0000%" height="15" fill="rgb(243,70,54)" fg:x="71" fg:w="3"/><text x="94.9167%" y="591.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;u64&gt;&gt; (3 samples, 4.00%)</title><rect x="94.6667%" y="565" width="4.0000%" height="15" fill="rgb(242,28,8)" fg:x="71" fg:w="3"/><text x="94.9167%" y="575.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (2 samples, 2.67%)</title><rect x="96.0000%" y="549" width="2.6667%" height="15" fill="rgb(219,106,18)" fg:x="72" fg:w="2"/><text x="96.2500%" y="559.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 2.67%)</title><rect x="96.0000%" y="533" width="2.6667%" height="15" fill="rgb(244,222,10)" fg:x="72" fg:w="2"/><text x="96.2500%" y="543.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 2.67%)</title><rect x="96.0000%" y="517" width="2.6667%" height="15" fill="rgb(236,179,52)" fg:x="72" fg:w="2"/><text x="96.2500%" y="527.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (2 samples, 2.67%)</title><rect x="96.0000%" y="501" width="2.6667%" height="15" fill="rgb(213,23,39)" fg:x="72" fg:w="2"/><text x="96.2500%" y="511.50">al..</text></g><g><title>cfree (2 samples, 2.67%)</title><rect x="96.0000%" y="485" width="2.6667%" height="15" fill="rgb(238,48,10)" fg:x="72" fg:w="2"/><text x="96.2500%" y="495.50">cf..</text></g><g><title>[libc.so.6] (2 samples, 2.67%)</title><rect x="96.0000%" y="469" width="2.6667%" height="15" fill="rgb(251,196,23)" fg:x="72" fg:w="2"/><text x="96.2500%" y="479.50">[l..</text></g><g><title>all (75 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(250,152,24)" fg:x="0" fg:w="75"/><text x="0.2500%" y="975.50"></text></g><g><title>advent_of_code_ (75 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(209,150,17)" fg:x="0" fg:w="75"/><text x="0.2500%" y="959.50">advent_of_code_</text></g><g><title>_start (67 samples, 89.33%)</title><rect x="10.6667%" y="933" width="89.3333%" height="15" fill="rgb(234,202,34)" fg:x="8" fg:w="67"/><text x="10.9167%" y="943.50">_start</text></g><g><title>__libc_start_main (67 samples, 89.33%)</title><rect x="10.6667%" y="917" width="89.3333%" height="15" fill="rgb(253,148,53)" fg:x="8" fg:w="67"/><text x="10.9167%" y="927.50">__libc_start_main</text></g><g><title>[libc.so.6] (67 samples, 89.33%)</title><rect x="10.6667%" y="901" width="89.3333%" height="15" fill="rgb(218,129,16)" fg:x="8" fg:w="67"/><text x="10.9167%" y="911.50">[libc.so.6]</text></g><g><title>main (67 samples, 89.33%)</title><rect x="10.6667%" y="885" width="89.3333%" height="15" fill="rgb(216,85,19)" fg:x="8" fg:w="67"/><text x="10.9167%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (67 samples, 89.33%)</title><rect x="10.6667%" y="869" width="89.3333%" height="15" fill="rgb(235,228,7)" fg:x="8" fg:w="67"/><text x="10.9167%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (67 samples, 89.33%)</title><rect x="10.6667%" y="853" width="89.3333%" height="15" fill="rgb(245,175,0)" fg:x="8" fg:w="67"/><text x="10.9167%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (67 samples, 89.33%)</title><rect x="10.6667%" y="837" width="89.3333%" height="15" fill="rgb(208,168,36)" fg:x="8" fg:w="67"/><text x="10.9167%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (67 samples, 89.33%)</title><rect x="10.6667%" y="821" width="89.3333%" height="15" fill="rgb(246,171,24)" fg:x="8" fg:w="67"/><text x="10.9167%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (67 samples, 89.33%)</title><rect x="10.6667%" y="805" width="89.3333%" height="15" fill="rgb(215,142,24)" fg:x="8" fg:w="67"/><text x="10.9167%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (67 samples, 89.33%)</title><rect x="10.6667%" y="789" width="89.3333%" height="15" fill="rgb(250,187,7)" fg:x="8" fg:w="67"/><text x="10.9167%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (67 samples, 89.33%)</title><rect x="10.6667%" y="773" width="89.3333%" height="15" fill="rgb(228,66,33)" fg:x="8" fg:w="67"/><text x="10.9167%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (67 samples, 89.33%)</title><rect x="10.6667%" y="757" width="89.3333%" height="15" fill="rgb(234,215,21)" fg:x="8" fg:w="67"/><text x="10.9167%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (67 samples, 89.33%)</title><rect x="10.6667%" y="741" width="89.3333%" height="15" fill="rgb(222,191,20)" fg:x="8" fg:w="67"/><text x="10.9167%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (67 samples, 89.33%)</title><rect x="10.6667%" y="725" width="89.3333%" height="15" fill="rgb(245,79,54)" fg:x="8" fg:w="67"/><text x="10.9167%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (67 samples, 89.33%)</title><rect x="10.6667%" y="709" width="89.3333%" height="15" fill="rgb(240,10,37)" fg:x="8" fg:w="67"/><text x="10.9167%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (67 samples, 89.33%)</title><rect x="10.6667%" y="693" width="89.3333%" height="15" fill="rgb(214,192,32)" fg:x="8" fg:w="67"/><text x="10.9167%" y="703.50">core::ops::function::FnOnce::call_once</text></g><g><title>advent_of_code_2022::main (67 samples, 89.33%)</title><rect x="10.6667%" y="677" width="89.3333%" height="15" fill="rgb(209,36,54)" fg:x="8" fg:w="67"/><text x="10.9167%" y="687.50">advent_of_code_2022::main</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn aoc_runner::Runner&gt;&gt; (1 samples, 1.33%)</title><rect x="98.6667%" y="661" width="1.3333%" height="15" fill="rgb(220,10,11)" fg:x="74" fg:w="1"/><text x="98.9167%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 1.33%)</title><rect x="98.6667%" y="645" width="1.3333%" height="15" fill="rgb(221,106,17)" fg:x="74" fg:w="1"/><text x="98.9167%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;vfs::path::VFS&gt; (1 samples, 1.33%)</title><rect x="98.6667%" y="629" width="1.3333%" height="15" fill="rgb(251,142,44)" fg:x="74" fg:w="1"/><text x="98.9167%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn vfs::filesystem::FileSystem&gt;&gt; (1 samples, 1.33%)</title><rect x="98.6667%" y="613" width="1.3333%" height="15" fill="rgb(238,13,15)" fg:x="74" fg:w="1"/><text x="98.9167%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 1.33%)</title><rect x="98.6667%" y="597" width="1.3333%" height="15" fill="rgb(208,107,27)" fg:x="74" fg:w="1"/><text x="98.9167%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;vfs::impls::memory::MemoryFsImpl&gt;&gt; (1 samples, 1.33%)</title><rect x="98.6667%" y="581" width="1.3333%" height="15" fill="rgb(205,136,37)" fg:x="74" fg:w="1"/><text x="98.9167%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vfs::impls::memory::MemoryFsImpl&gt;&gt; (1 samples, 1.33%)</title><rect x="98.6667%" y="565" width="1.3333%" height="15" fill="rgb(250,205,27)" fg:x="74" fg:w="1"/><text x="98.9167%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;vfs::impls::memory::MemoryFsImpl&gt; (1 samples, 1.33%)</title><rect x="98.6667%" y="549" width="1.3333%" height="15" fill="rgb(210,80,43)" fg:x="74" fg:w="1"/><text x="98.9167%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,vfs::impls::memory::MemoryFile&gt;&gt; (1 samples, 1.33%)</title><rect x="98.6667%" y="533" width="1.3333%" height="15" fill="rgb(247,160,36)" fg:x="74" fg:w="1"/><text x="98.9167%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,vfs::impls::memory::MemoryFile,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 1.33%)</title><rect x="98.6667%" y="517" width="1.3333%" height="15" fill="rgb(234,13,49)" fg:x="74" fg:w="1"/><text x="98.9167%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,vfs::impls::memory::MemoryFile)&gt;&gt; (1 samples, 1.33%)</title><rect x="98.6667%" y="501" width="1.3333%" height="15" fill="rgb(234,122,0)" fg:x="74" fg:w="1"/><text x="98.9167%" y="511.50"></text></g><g><title>cfree (1 samples, 1.33%)</title><rect x="98.6667%" y="485" width="1.3333%" height="15" fill="rgb(207,146,38)" fg:x="74" fg:w="1"/><text x="98.9167%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 1.33%)</title><rect x="98.6667%" y="469" width="1.3333%" height="15" fill="rgb(207,177,25)" fg:x="74" fg:w="1"/><text x="98.9167%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 1.33%)</title><rect x="98.6667%" y="453" width="1.3333%" height="15" fill="rgb(211,178,42)" fg:x="74" fg:w="1"/><text x="98.9167%" y="463.50"></text></g></svg></svg>